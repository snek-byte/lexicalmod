{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalContentEditable.dev.js", "../../@lexical/react/LexicalContentEditable.js"],
  "sourcesContent": ["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';\r\n\r\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\r\nvar React = require('react');\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\n\r\nconst CAN_USE_DOM = typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined';\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nconst useLayoutEffectImpl = CAN_USE_DOM ? React.useLayoutEffect : React.useEffect;\r\nvar useLayoutEffect = useLayoutEffectImpl;\r\n\r\nfunction ContentEditable({\r\n  ariaActiveDescendant,\r\n  ariaAutoComplete,\r\n  ariaControls,\r\n  ariaDescribedBy,\r\n  ariaExpanded,\r\n  ariaLabel,\r\n  ariaLabelledBy,\r\n  ariaMultiline,\r\n  ariaOwns,\r\n  ariaRequired,\r\n  autoCapitalize,\r\n  className,\r\n  id,\r\n  role = 'textbox',\r\n  spellCheck = true,\r\n  style,\r\n  tabIndex,\r\n  'data-testid': testid,\r\n  ...rest\r\n}) {\r\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\r\n  const [isEditable, setEditable] = React.useState(false);\r\n  const ref = React.useCallback(rootElement => {\r\n    editor.setRootElement(rootElement);\r\n  }, [editor]);\r\n  useLayoutEffect(() => {\r\n    setEditable(editor.isEditable());\r\n    return editor.registerEditableListener(currentIsEditable => {\r\n      setEditable(currentIsEditable);\r\n    });\r\n  }, [editor]);\r\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\r\n    \"aria-activedescendant\": !isEditable ? undefined : ariaActiveDescendant,\r\n    \"aria-autocomplete\": !isEditable ? 'none' : ariaAutoComplete,\r\n    \"aria-controls\": !isEditable ? undefined : ariaControls,\r\n    \"aria-describedby\": ariaDescribedBy,\r\n    \"aria-expanded\": !isEditable ? undefined : role === 'combobox' ? !!ariaExpanded : undefined,\r\n    \"aria-label\": ariaLabel,\r\n    \"aria-labelledby\": ariaLabelledBy,\r\n    \"aria-multiline\": ariaMultiline,\r\n    \"aria-owns\": !isEditable ? undefined : ariaOwns,\r\n    \"aria-readonly\": !isEditable ? true : undefined,\r\n    \"aria-required\": ariaRequired,\r\n    autoCapitalize: autoCapitalize,\r\n    className: className,\r\n    contentEditable: isEditable,\r\n    \"data-testid\": testid,\r\n    id: id,\r\n    ref: ref,\r\n    role: role,\r\n    spellCheck: spellCheck,\r\n    style: style,\r\n    tabIndex: tabIndex\r\n  }));\r\n}\r\n\r\nexports.ContentEditable = ContentEditable;\r\n", "/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict'\r\nconst LexicalContentEditable = process.env.NODE_ENV === 'development' ? require('./LexicalContentEditable.dev.js') : require('./LexicalContentEditable.prod.js')\r\nmodule.exports = LexicalContentEditable;"],
  "mappings": ";;;;;;;;;;;AAAA;AAAA;AAAA;AAQA,QAAI,yBAAyB;AAC7B,QAAI,QAAQ;AAEZ,aAAS,WAAW;AAClB,iBAAW,OAAO,SAAS,OAAO,OAAO,KAAK,IAAI,SAAU,QAAQ;AAClE,iBAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,cAAI,SAAS,UAAU,CAAC;AACxB,mBAAS,OAAO,QAAQ;AACtB,gBAAI,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,GAAG;AACrD,qBAAO,GAAG,IAAI,OAAO,GAAG;AAAA,YAC1B;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AACA,aAAO,SAAS,MAAM,MAAM,SAAS;AAAA,IACvC;AAUA,QAAM,cAAc,OAAO,WAAW,eAAe,OAAO,OAAO,aAAa,eAAe,OAAO,OAAO,SAAS,kBAAkB;AASxI,QAAM,sBAAsB,cAAc,MAAM,kBAAkB,MAAM;AACxE,QAAI,kBAAkB;AAEtB,aAAS,gBAAgB;AAAA,MACvB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,aAAa;AAAA,MACb;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,GAAG;AAAA,IACL,GAAG;AACD,YAAM,CAAC,MAAM,IAAI,uBAAuB,0BAA0B;AAClE,YAAM,CAAC,YAAY,WAAW,IAAI,MAAM,SAAS,KAAK;AACtD,YAAM,MAAM,MAAM,YAAY,iBAAe;AAC3C,eAAO,eAAe,WAAW;AAAA,MACnC,GAAG,CAAC,MAAM,CAAC;AACX,sBAAgB,MAAM;AACpB,oBAAY,OAAO,WAAW,CAAC;AAC/B,eAAO,OAAO,yBAAyB,uBAAqB;AAC1D,sBAAY,iBAAiB;AAAA,QAC/B,CAAC;AAAA,MACH,GAAG,CAAC,MAAM,CAAC;AACX,aAAoB,MAAM,cAAc,OAAO,SAAS,CAAC,GAAG,MAAM;AAAA,QAChE,yBAAyB,CAAC,aAAa,SAAY;AAAA,QACnD,qBAAqB,CAAC,aAAa,SAAS;AAAA,QAC5C,iBAAiB,CAAC,aAAa,SAAY;AAAA,QAC3C,oBAAoB;AAAA,QACpB,iBAAiB,CAAC,aAAa,SAAY,SAAS,aAAa,CAAC,CAAC,eAAe;AAAA,QAClF,cAAc;AAAA,QACd,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,QAClB,aAAa,CAAC,aAAa,SAAY;AAAA,QACvC,iBAAiB,CAAC,aAAa,OAAO;AAAA,QACtC,iBAAiB;AAAA,QACjB;AAAA,QACA;AAAA,QACA,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF,CAAC,CAAC;AAAA,IACJ;AAEA,YAAQ,kBAAkB;AAAA;AAAA;;;ACvG1B;AAAA;AAOA,QAAM,yBAAyB,OAAyC,uCAA6C;AACrH,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
