{
  "version": 3,
  "sources": ["../../@lexical/react/LexicalListPlugin.dev.js", "../../@lexical/react/LexicalListPlugin.js"],
  "sourcesContent": ["/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';\r\n\r\nvar list = require('@lexical/list');\r\nvar LexicalComposerContext = require('@lexical/react/LexicalComposerContext');\r\nvar react = require('react');\r\nvar utils = require('@lexical/utils');\r\nvar lexical = require('lexical');\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nfunction useList(editor) {\r\n  react.useEffect(() => {\r\n    return utils.mergeRegister(editor.registerCommand(list.INSERT_ORDERED_LIST_COMMAND, () => {\r\n      list.insertList(editor, 'number');\r\n      return true;\r\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.INSERT_UNORDERED_LIST_COMMAND, () => {\r\n      list.insertList(editor, 'bullet');\r\n      return true;\r\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(list.REMOVE_LIST_COMMAND, () => {\r\n      list.removeList(editor);\r\n      return true;\r\n    }, lexical.COMMAND_PRIORITY_LOW), editor.registerCommand(lexical.INSERT_PARAGRAPH_COMMAND, () => {\r\n      const hasHandledInsertParagraph = list.$handleListInsertParagraph();\r\n      if (hasHandledInsertParagraph) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }, lexical.COMMAND_PRIORITY_LOW));\r\n  }, [editor]);\r\n}\r\n\r\n/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nfunction ListPlugin() {\r\n  const [editor] = LexicalComposerContext.useLexicalComposerContext();\r\n  react.useEffect(() => {\r\n    if (!editor.hasNodes([list.ListNode, list.ListItemNode])) {\r\n      throw new Error('ListPlugin: ListNode and/or ListItemNode not registered on editor');\r\n    }\r\n  }, [editor]);\r\n  useList(editor);\r\n  return null;\r\n}\r\n\r\nexports.ListPlugin = ListPlugin;\r\n", "/**\r\n * Copyright (c) Meta Platforms, Inc. and affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict'\r\nconst LexicalListPlugin = process.env.NODE_ENV === 'development' ? require('./LexicalListPlugin.dev.js') : require('./LexicalListPlugin.prod.js')\r\nmodule.exports = LexicalListPlugin;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAQA,QAAI,OAAO;AACX,QAAI,yBAAyB;AAC7B,QAAI,QAAQ;AACZ,QAAI,QAAQ;AACZ,QAAI,UAAU;AASd,aAAS,QAAQ,QAAQ;AACvB,YAAM,UAAU,MAAM;AACpB,eAAO,MAAM,cAAc,OAAO,gBAAgB,KAAK,6BAA6B,MAAM;AACxF,eAAK,WAAW,QAAQ,QAAQ;AAChC,iBAAO;AAAA,QACT,GAAG,QAAQ,oBAAoB,GAAG,OAAO,gBAAgB,KAAK,+BAA+B,MAAM;AACjG,eAAK,WAAW,QAAQ,QAAQ;AAChC,iBAAO;AAAA,QACT,GAAG,QAAQ,oBAAoB,GAAG,OAAO,gBAAgB,KAAK,qBAAqB,MAAM;AACvF,eAAK,WAAW,MAAM;AACtB,iBAAO;AAAA,QACT,GAAG,QAAQ,oBAAoB,GAAG,OAAO,gBAAgB,QAAQ,0BAA0B,MAAM;AAC/F,gBAAM,4BAA4B,KAAK,2BAA2B;AAClE,cAAI,2BAA2B;AAC7B,mBAAO;AAAA,UACT;AACA,iBAAO;AAAA,QACT,GAAG,QAAQ,oBAAoB,CAAC;AAAA,MAClC,GAAG,CAAC,MAAM,CAAC;AAAA,IACb;AASA,aAAS,aAAa;AACpB,YAAM,CAAC,MAAM,IAAI,uBAAuB,0BAA0B;AAClE,YAAM,UAAU,MAAM;AACpB,YAAI,CAAC,OAAO,SAAS,CAAC,KAAK,UAAU,KAAK,YAAY,CAAC,GAAG;AACxD,gBAAM,IAAI,MAAM,mEAAmE;AAAA,QACrF;AAAA,MACF,GAAG,CAAC,MAAM,CAAC;AACX,cAAQ,MAAM;AACd,aAAO;AAAA,IACT;AAEA,YAAQ,aAAa;AAAA;AAAA;;;AC5DrB;AAAA;AAOA,QAAM,oBAAoB,OAAyC,kCAAwC;AAC3G,WAAO,UAAU;AAAA;AAAA;",
  "names": []
}
