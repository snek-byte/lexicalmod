{
  "version": 3,
  "sources": ["../../delaunator/index.js", "../../chroma-js/dist/chroma.cjs", "../../canvas/lib/parse-font.js", "../../canvas/browser.js", "../../trianglify/dist/trianglify.js"],
  "sourcesContent": ["\r\nconst EPSILON = Math.pow(2, -52);\r\nconst EDGE_STACK = new Uint32Array(512);\r\n\r\nexport default class Delaunator {\r\n\r\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\r\n        const n = points.length;\r\n        const coords = new Float64Array(n * 2);\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const p = points[i];\r\n            coords[2 * i] = getX(p);\r\n            coords[2 * i + 1] = getY(p);\r\n        }\r\n\r\n        return new Delaunator(coords);\r\n    }\r\n\r\n    constructor(coords) {\r\n        const n = coords.length >> 1;\r\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\r\n\r\n        this.coords = coords;\r\n\r\n        // arrays that will store the triangulation graph\r\n        const maxTriangles = Math.max(2 * n - 5, 0);\r\n        this._triangles = new Uint32Array(maxTriangles * 3);\r\n        this._halfedges = new Int32Array(maxTriangles * 3);\r\n\r\n        // temporary arrays for tracking the edges of the advancing convex hull\r\n        this._hashSize = Math.ceil(Math.sqrt(n));\r\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\r\n        this._hullNext = new Uint32Array(n); // edge to next edge\r\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\r\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\r\n\r\n        // temporary arrays for sorting points\r\n        this._ids = new Uint32Array(n);\r\n        this._dists = new Float64Array(n);\r\n\r\n        this.update();\r\n    }\r\n\r\n    update() {\r\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\r\n        const n = coords.length >> 1;\r\n\r\n        // populate an array of point indices; calculate input data bbox\r\n        let minX = Infinity;\r\n        let minY = Infinity;\r\n        let maxX = -Infinity;\r\n        let maxY = -Infinity;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n            if (x < minX) minX = x;\r\n            if (y < minY) minY = y;\r\n            if (x > maxX) maxX = x;\r\n            if (y > maxY) maxY = y;\r\n            this._ids[i] = i;\r\n        }\r\n        const cx = (minX + maxX) / 2;\r\n        const cy = (minY + maxY) / 2;\r\n\r\n        let minDist = Infinity;\r\n        let i0, i1, i2;\r\n\r\n        // pick a seed point close to the center\r\n        for (let i = 0; i < n; i++) {\r\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist) {\r\n                i0 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        const i0x = coords[2 * i0];\r\n        const i0y = coords[2 * i0 + 1];\r\n\r\n        minDist = Infinity;\r\n\r\n        // find the point closest to the seed\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0) continue;\r\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\r\n            if (d < minDist && d > 0) {\r\n                i1 = i;\r\n                minDist = d;\r\n            }\r\n        }\r\n        let i1x = coords[2 * i1];\r\n        let i1y = coords[2 * i1 + 1];\r\n\r\n        let minRadius = Infinity;\r\n\r\n        // find the third point which forms the smallest circumcircle with the first two\r\n        for (let i = 0; i < n; i++) {\r\n            if (i === i0 || i === i1) continue;\r\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\r\n            if (r < minRadius) {\r\n                i2 = i;\r\n                minRadius = r;\r\n            }\r\n        }\r\n        let i2x = coords[2 * i2];\r\n        let i2y = coords[2 * i2 + 1];\r\n\r\n        if (minRadius === Infinity) {\r\n            // order collinear points by dx (or dy if all x are identical)\r\n            // and return the list as a hull\r\n            for (let i = 0; i < n; i++) {\r\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\r\n            }\r\n            quicksort(this._ids, this._dists, 0, n - 1);\r\n            const hull = new Uint32Array(n);\r\n            let j = 0;\r\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\r\n                const id = this._ids[i];\r\n                if (this._dists[id] > d0) {\r\n                    hull[j++] = id;\r\n                    d0 = this._dists[id];\r\n                }\r\n            }\r\n            this.hull = hull.subarray(0, j);\r\n            this.triangles = new Uint32Array(0);\r\n            this.halfedges = new Uint32Array(0);\r\n            return;\r\n        }\r\n\r\n        // swap the order of the seed points for counter-clockwise orientation\r\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\r\n            const i = i1;\r\n            const x = i1x;\r\n            const y = i1y;\r\n            i1 = i2;\r\n            i1x = i2x;\r\n            i1y = i2y;\r\n            i2 = i;\r\n            i2x = x;\r\n            i2y = y;\r\n        }\r\n\r\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\r\n        this._cx = center.x;\r\n        this._cy = center.y;\r\n\r\n        for (let i = 0; i < n; i++) {\r\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\r\n        }\r\n\r\n        // sort the points by distance from the seed triangle circumcenter\r\n        quicksort(this._ids, this._dists, 0, n - 1);\r\n\r\n        // set up the seed triangle as the starting hull\r\n        this._hullStart = i0;\r\n        let hullSize = 3;\r\n\r\n        hullNext[i0] = hullPrev[i2] = i1;\r\n        hullNext[i1] = hullPrev[i0] = i2;\r\n        hullNext[i2] = hullPrev[i1] = i0;\r\n\r\n        hullTri[i0] = 0;\r\n        hullTri[i1] = 1;\r\n        hullTri[i2] = 2;\r\n\r\n        hullHash.fill(-1);\r\n        hullHash[this._hashKey(i0x, i0y)] = i0;\r\n        hullHash[this._hashKey(i1x, i1y)] = i1;\r\n        hullHash[this._hashKey(i2x, i2y)] = i2;\r\n\r\n        this.trianglesLen = 0;\r\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\r\n\r\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\r\n            const i = this._ids[k];\r\n            const x = coords[2 * i];\r\n            const y = coords[2 * i + 1];\r\n\r\n            // skip near-duplicate points\r\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\r\n            xp = x;\r\n            yp = y;\r\n\r\n            // skip seed triangle points\r\n            if (i === i0 || i === i1 || i === i2) continue;\r\n\r\n            // find a visible edge on the convex hull using edge hash\r\n            let start = 0;\r\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\r\n                start = hullHash[(key + j) % this._hashSize];\r\n                if (start !== -1 && start !== hullNext[start]) break;\r\n            }\r\n\r\n            start = hullPrev[start];\r\n            let e = start, q;\r\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\r\n                e = q;\r\n                if (e === start) {\r\n                    e = -1;\r\n                    break;\r\n                }\r\n            }\r\n            if (e === -1) continue; // likely a near-duplicate point; skip it\r\n\r\n            // add the first triangle from the point\r\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\r\n\r\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\r\n            hullTri[i] = this._legalize(t + 2);\r\n            hullTri[e] = t; // keep track of boundary triangles on the hull\r\n            hullSize++;\r\n\r\n            // walk forward through the hull, adding more triangles and flipping recursively\r\n            let n = hullNext[e];\r\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\r\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\r\n                hullTri[i] = this._legalize(t + 2);\r\n                hullNext[n] = n; // mark as removed\r\n                hullSize--;\r\n                n = q;\r\n            }\r\n\r\n            // walk backward from the other side, adding more triangles and flipping\r\n            if (e === start) {\r\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\r\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\r\n                    this._legalize(t + 2);\r\n                    hullTri[q] = t;\r\n                    hullNext[e] = e; // mark as removed\r\n                    hullSize--;\r\n                    e = q;\r\n                }\r\n            }\r\n\r\n            // update the hull indices\r\n            this._hullStart = hullPrev[i] = e;\r\n            hullNext[e] = hullPrev[n] = i;\r\n            hullNext[i] = n;\r\n\r\n            // save the two new edges in the hash table\r\n            hullHash[this._hashKey(x, y)] = i;\r\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\r\n        }\r\n\r\n        this.hull = new Uint32Array(hullSize);\r\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\r\n            this.hull[i] = e;\r\n            e = hullNext[e];\r\n        }\r\n\r\n        // trim typed triangle mesh arrays\r\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\r\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\r\n    }\r\n\r\n    _hashKey(x, y) {\r\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\r\n    }\r\n\r\n    _legalize(a) {\r\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\r\n\r\n        let i = 0;\r\n        let ar = 0;\r\n\r\n        // recursion eliminated with a fixed-size stack\r\n        while (true) {\r\n            const b = halfedges[a];\r\n\r\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\r\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\r\n             * then do the same check/flip recursively for the new pair of triangles\r\n             *\r\n             *           pl                    pl\r\n             *          /||\\                  /  \\\r\n             *       al/ || \\bl            al/    \\a\r\n             *        /  ||  \\              /      \\\r\n             *       /  a||b  \\    flip    /___ar___\\\r\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\r\n             *        \\  ||  /              \\      /\r\n             *       ar\\ || /br             b\\    /br\r\n             *          \\||/                  \\  /\r\n             *           pr                    pr\r\n             */\r\n            const a0 = a - a % 3;\r\n            ar = a0 + (a + 2) % 3;\r\n\r\n            if (b === -1) { // convex hull edge\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n                continue;\r\n            }\r\n\r\n            const b0 = b - b % 3;\r\n            const al = a0 + (a + 1) % 3;\r\n            const bl = b0 + (b + 2) % 3;\r\n\r\n            const p0 = triangles[ar];\r\n            const pr = triangles[a];\r\n            const pl = triangles[al];\r\n            const p1 = triangles[bl];\r\n\r\n            const illegal = inCircle(\r\n                coords[2 * p0], coords[2 * p0 + 1],\r\n                coords[2 * pr], coords[2 * pr + 1],\r\n                coords[2 * pl], coords[2 * pl + 1],\r\n                coords[2 * p1], coords[2 * p1 + 1]);\r\n\r\n            if (illegal) {\r\n                triangles[a] = p1;\r\n                triangles[b] = p0;\r\n\r\n                const hbl = halfedges[bl];\r\n\r\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\r\n                if (hbl === -1) {\r\n                    let e = this._hullStart;\r\n                    do {\r\n                        if (this._hullTri[e] === bl) {\r\n                            this._hullTri[e] = a;\r\n                            break;\r\n                        }\r\n                        e = this._hullPrev[e];\r\n                    } while (e !== this._hullStart);\r\n                }\r\n                this._link(a, hbl);\r\n                this._link(b, halfedges[ar]);\r\n                this._link(ar, bl);\r\n\r\n                const br = b0 + (b + 1) % 3;\r\n\r\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\r\n                if (i < EDGE_STACK.length) {\r\n                    EDGE_STACK[i++] = br;\r\n                }\r\n            } else {\r\n                if (i === 0) break;\r\n                a = EDGE_STACK[--i];\r\n            }\r\n        }\r\n\r\n        return ar;\r\n    }\r\n\r\n    _link(a, b) {\r\n        this._halfedges[a] = b;\r\n        if (b !== -1) this._halfedges[b] = a;\r\n    }\r\n\r\n    // add a new triangle given vertex indices and adjacent half-edge ids\r\n    _addTriangle(i0, i1, i2, a, b, c) {\r\n        const t = this.trianglesLen;\r\n\r\n        this._triangles[t] = i0;\r\n        this._triangles[t + 1] = i1;\r\n        this._triangles[t + 2] = i2;\r\n\r\n        this._link(t, a);\r\n        this._link(t + 1, b);\r\n        this._link(t + 2, c);\r\n\r\n        this.trianglesLen += 3;\r\n\r\n        return t;\r\n    }\r\n}\r\n\r\n// monotonically increases with real angle, but doesn't need expensive trigonometry\r\nfunction pseudoAngle(dx, dy) {\r\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\r\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\r\n}\r\n\r\nfunction dist(ax, ay, bx, by) {\r\n    const dx = ax - bx;\r\n    const dy = ay - by;\r\n    return dx * dx + dy * dy;\r\n}\r\n\r\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\r\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\r\n    const l = (ry - py) * (qx - px);\r\n    const r = (rx - px) * (qy - py);\r\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\r\n}\r\n\r\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\r\nfunction orient(rx, ry, qx, qy, px, py) {\r\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\r\n    orientIfSure(rx, ry, qx, qy, px, py) ||\r\n    orientIfSure(qx, qy, px, py, rx, ry);\r\n    return sign < 0;\r\n}\r\n\r\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\r\n    const dx = ax - px;\r\n    const dy = ay - py;\r\n    const ex = bx - px;\r\n    const ey = by - py;\r\n    const fx = cx - px;\r\n    const fy = cy - py;\r\n\r\n    const ap = dx * dx + dy * dy;\r\n    const bp = ex * ex + ey * ey;\r\n    const cp = fx * fx + fy * fy;\r\n\r\n    return dx * (ey * cp - bp * fy) -\r\n           dy * (ex * cp - bp * fx) +\r\n           ap * (ex * fy - ey * fx) < 0;\r\n}\r\n\r\nfunction circumradius(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = (ey * bl - dy * cl) * d;\r\n    const y = (dx * cl - ex * bl) * d;\r\n\r\n    return x * x + y * y;\r\n}\r\n\r\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\r\n    const dx = bx - ax;\r\n    const dy = by - ay;\r\n    const ex = cx - ax;\r\n    const ey = cy - ay;\r\n\r\n    const bl = dx * dx + dy * dy;\r\n    const cl = ex * ex + ey * ey;\r\n    const d = 0.5 / (dx * ey - dy * ex);\r\n\r\n    const x = ax + (ey * bl - dy * cl) * d;\r\n    const y = ay + (dx * cl - ex * bl) * d;\r\n\r\n    return {x, y};\r\n}\r\n\r\nfunction quicksort(ids, dists, left, right) {\r\n    if (right - left <= 20) {\r\n        for (let i = left + 1; i <= right; i++) {\r\n            const temp = ids[i];\r\n            const tempDist = dists[temp];\r\n            let j = i - 1;\r\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\r\n            ids[j + 1] = temp;\r\n        }\r\n    } else {\r\n        const median = (left + right) >> 1;\r\n        let i = left + 1;\r\n        let j = right;\r\n        swap(ids, median, i);\r\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\r\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\r\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\r\n\r\n        const temp = ids[i];\r\n        const tempDist = dists[temp];\r\n        while (true) {\r\n            do i++; while (dists[ids[i]] < tempDist);\r\n            do j--; while (dists[ids[j]] > tempDist);\r\n            if (j < i) break;\r\n            swap(ids, i, j);\r\n        }\r\n        ids[left + 1] = ids[j];\r\n        ids[j] = temp;\r\n\r\n        if (right - i + 1 >= j - left) {\r\n            quicksort(ids, dists, i, right);\r\n            quicksort(ids, dists, left, j - 1);\r\n        } else {\r\n            quicksort(ids, dists, left, j - 1);\r\n            quicksort(ids, dists, i, right);\r\n        }\r\n    }\r\n}\r\n\r\nfunction swap(arr, i, j) {\r\n    const tmp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = tmp;\r\n}\r\n\r\nfunction defaultGetX(p) {\r\n    return p[0];\r\n}\r\nfunction defaultGetY(p) {\r\n    return p[1];\r\n}\r\n", "/**\r\n * chroma.js - JavaScript library for color conversions\r\n *\r\n * Copyright (c) 2011-2024, Gregor Aisch\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright notice, this\r\n * list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright notice,\r\n * this list of conditions and the following disclaimer in the documentation\r\n * and/or other materials provided with the distribution.\r\n *\r\n * 3. The name Gregor Aisch may not be used to endorse or promote products\r\n * derived from this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\r\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\r\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\r\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\r\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\r\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n *\r\n * -------------------------------------------------------\r\n *\r\n * chroma.js includes colors from colorbrewer2.org, which are released under\r\n * the following license:\r\n *\r\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\r\n * and The Pennsylvania State University.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\r\n * either express or implied. See the License for the specific\r\n * language governing permissions and limitations under the License.\r\n *\r\n * ------------------------------------------------------\r\n *\r\n * Named colors are taken from X11 Color Names.\r\n * http://www.w3.org/TR/css3-color/#svg-color\r\n *\r\n * @preserve\r\n */\r\n\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\r\n})(this, (function () { 'use strict';\r\n\r\n    function limit (x, low, high) {\r\n        if ( low === void 0 ) low = 0;\r\n        if ( high === void 0 ) high = 1;\r\n\r\n        return min$3(max$3(low, x), high);\r\n    }\r\n\r\n    function clip_rgb (rgb) {\r\n        rgb._clipped = false;\r\n        rgb._unclipped = rgb.slice(0);\r\n        for (var i = 0; i <= 3; i++) {\r\n            if (i < 3) {\r\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\r\n                rgb[i] = limit(rgb[i], 0, 255);\r\n            } else if (i === 3) {\r\n                rgb[i] = limit(rgb[i], 0, 1);\r\n            }\r\n        }\r\n        return rgb;\r\n    }\r\n\r\n    // ported from jQuery's $.type\r\n    var classToType = {};\r\n    for (var i$1 = 0, list$1 = [\r\n        'Boolean',\r\n        'Number',\r\n        'String',\r\n        'Function',\r\n        'Array',\r\n        'Date',\r\n        'RegExp',\r\n        'Undefined',\r\n        'Null'\r\n    ]; i$1 < list$1.length; i$1 += 1) {\r\n        var name = list$1[i$1];\r\n\r\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\r\n    }\r\n    function type (obj) {\r\n        return classToType[Object.prototype.toString.call(obj)] || 'object';\r\n    }\r\n\r\n    function unpack (args, keyOrder) {\r\n        if ( keyOrder === void 0 ) keyOrder = null;\r\n\r\n        // if called with more than 3 arguments, we return the arguments\r\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\r\n        // with less than 3 args we check if first arg is object\r\n        // and use the keyOrder string to extract and sort properties\r\n        if (type(args[0]) == 'object' && keyOrder) {\r\n            return keyOrder\r\n                .split('')\r\n                .filter(function (k) { return args[0][k] !== undefined; })\r\n                .map(function (k) { return args[0][k]; });\r\n        }\r\n        // otherwise we just return the first argument\r\n        // (which we suppose is an array of args)\r\n        return args[0];\r\n    }\r\n\r\n    function last (args) {\r\n        if (args.length < 2) { return null; }\r\n        var l = args.length - 1;\r\n        if (type(args[l]) == 'string') { return args[l].toLowerCase(); }\r\n        return null;\r\n    }\r\n\r\n    var PI$2 = Math.PI;\r\n    var min$3 = Math.min;\r\n    var max$3 = Math.max;\r\n\r\n    var TWOPI = PI$2 * 2;\r\n    var PITHIRD = PI$2 / 3;\r\n    var DEG2RAD = PI$2 / 180;\r\n    var RAD2DEG = 180 / PI$2;\r\n\r\n    var input = {\r\n        format: {},\r\n        autodetect: []\r\n    };\r\n\r\n    var Color = function Color() {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var me = this;\r\n        if (\r\n            type(args[0]) === 'object' &&\r\n            args[0].constructor &&\r\n            args[0].constructor === this.constructor\r\n        ) {\r\n            // the argument is already a Color instance\r\n            return args[0];\r\n        }\r\n        // last argument could be the mode\r\n        var mode = last(args);\r\n        var autodetect = false;\r\n        if (!mode) {\r\n            autodetect = true;\r\n            if (!input.sorted) {\r\n                input.autodetect = input.autodetect.sort(function (a, b) { return b.p - a.p; });\r\n                input.sorted = true;\r\n            }\r\n            // auto-detect format\r\n            for (var i = 0, list = input.autodetect; i < list.length; i += 1) {\r\n                var chk = list[i];\r\n\r\n                mode = chk.test.apply(chk, args);\r\n                if (mode) { break; }\r\n            }\r\n        }\r\n        if (input.format[mode]) {\r\n            var rgb = input.format[mode].apply(\r\n                null,\r\n                autodetect ? args : args.slice(0, -1)\r\n            );\r\n            me._rgb = clip_rgb(rgb);\r\n        } else {\r\n            throw new Error('unknown format: ' + args);\r\n        }\r\n        // add alpha channel\r\n        if (me._rgb.length === 3) { me._rgb.push(1); }\r\n    };\r\n    Color.prototype.toString = function toString () {\r\n        if (type(this.hex) == 'function') { return this.hex(); }\r\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\r\n    };\r\n\r\n    // this gets updated automatically\r\n    var version = '2.6.0';\r\n\r\n    var chroma = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( chroma.Color, [ null ].concat( args) ));\r\n    };\r\n\r\n    chroma.Color = Color;\r\n    chroma.version = version;\r\n\r\n    var cmyk2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'cmyk');\r\n        var c = args[0];\r\n        var m = args[1];\r\n        var y = args[2];\r\n        var k = args[3];\r\n        var alpha = args.length > 4 ? args[4] : 1;\r\n        if (k === 1) { return [0, 0, 0, alpha]; }\r\n        return [\r\n            c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r\r\n            m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g\r\n            y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b\r\n            alpha\r\n        ];\r\n    };\r\n\r\n    var max$2 = Math.max;\r\n\r\n    var rgb2cmyk = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        r = r / 255;\r\n        g = g / 255;\r\n        b = b / 255;\r\n        var k = 1 - max$2(r, max$2(g, b));\r\n        var f = k < 1 ? 1 / (1 - k) : 0;\r\n        var c = (1 - r - k) * f;\r\n        var m = (1 - g - k) * f;\r\n        var y = (1 - b - k) * f;\r\n        return [c, m, y, k];\r\n    };\r\n\r\n    Color.prototype.cmyk = function () {\r\n        return rgb2cmyk(this._rgb);\r\n    };\r\n\r\n    chroma.cmyk = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['cmyk']) ));\r\n    };\r\n\r\n    input.format.cmyk = cmyk2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'cmyk');\r\n            if (type(args) === 'array' && args.length === 4) {\r\n                return 'cmyk';\r\n            }\r\n        }\r\n    });\r\n\r\n    var rnd = function (a) { return Math.round(a * 100) / 100; };\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - hsl2css(h,s,l)\r\n     * - hsl2css(h,s,l,a)\r\n     * - hsl2css([h,s,l], mode)\r\n     * - hsl2css([h,s,l,a], mode)\r\n     * - hsl2css({h,s,l,a}, mode)\r\n     */\r\n    var hsl2css = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var hsla = unpack(args, 'hsla');\r\n        var mode = last(args) || 'lsa';\r\n        hsla[0] = rnd(hsla[0] || 0);\r\n        hsla[1] = rnd(hsla[1] * 100) + '%';\r\n        hsla[2] = rnd(hsla[2] * 100) + '%';\r\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {\r\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\r\n            mode = 'hsla';\r\n        } else {\r\n            hsla.length = 3;\r\n        }\r\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\r\n    };\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2hsl(r,g,b)\r\n     * - rgb2hsl(r,g,b,a)\r\n     * - rgb2hsl([r,g,b])\r\n     * - rgb2hsl([r,g,b,a])\r\n     * - rgb2hsl({r,g,b,a})\r\n     */\r\n    var rgb2hsl$1 = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'rgba');\r\n        var r = args[0];\r\n        var g = args[1];\r\n        var b = args[2];\r\n\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n\r\n        var minRgb = min$3(r, g, b);\r\n        var maxRgb = max$3(r, g, b);\r\n\r\n        var l = (maxRgb + minRgb) / 2;\r\n        var s, h;\r\n\r\n        if (maxRgb === minRgb) {\r\n            s = 0;\r\n            h = Number.NaN;\r\n        } else {\r\n            s =\r\n                l < 0.5\r\n                    ? (maxRgb - minRgb) / (maxRgb + minRgb)\r\n                    : (maxRgb - minRgb) / (2 - maxRgb - minRgb);\r\n        }\r\n\r\n        if (r == maxRgb) { h = (g - b) / (maxRgb - minRgb); }\r\n        else if (g == maxRgb) { h = 2 + (b - r) / (maxRgb - minRgb); }\r\n        else if (b == maxRgb) { h = 4 + (r - g) / (maxRgb - minRgb); }\r\n\r\n        h *= 60;\r\n        if (h < 0) { h += 360; }\r\n        if (args.length > 3 && args[3] !== undefined) { return [h, s, l, args[3]]; }\r\n        return [h, s, l];\r\n    };\r\n\r\n    var round$6 = Math.round;\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2css(r,g,b)\r\n     * - rgb2css(r,g,b,a)\r\n     * - rgb2css([r,g,b], mode)\r\n     * - rgb2css([r,g,b,a], mode)\r\n     * - rgb2css({r,g,b,a}, mode)\r\n     */\r\n    var rgb2css = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgba = unpack(args, 'rgba');\r\n        var mode = last(args) || 'rgb';\r\n        if (mode.substr(0, 3) == 'hsl') {\r\n            return hsl2css(rgb2hsl$1(rgba), mode);\r\n        }\r\n        rgba[0] = round$6(rgba[0]);\r\n        rgba[1] = round$6(rgba[1]);\r\n        rgba[2] = round$6(rgba[2]);\r\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {\r\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\r\n            mode = 'rgba';\r\n        }\r\n        return (mode + \"(\" + (rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',')) + \")\");\r\n    };\r\n\r\n    var round$5 = Math.round;\r\n\r\n    var hsl2rgb = function () {\r\n        var assign;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack(args, 'hsl');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var l = args[2];\r\n        var r, g, b;\r\n        if (s === 0) {\r\n            r = g = b = l * 255;\r\n        } else {\r\n            var t3 = [0, 0, 0];\r\n            var c = [0, 0, 0];\r\n            var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var t1 = 2 * l - t2;\r\n            var h_ = h / 360;\r\n            t3[0] = h_ + 1 / 3;\r\n            t3[1] = h_;\r\n            t3[2] = h_ - 1 / 3;\r\n            for (var i = 0; i < 3; i++) {\r\n                if (t3[i] < 0) { t3[i] += 1; }\r\n                if (t3[i] > 1) { t3[i] -= 1; }\r\n                if (6 * t3[i] < 1) { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\r\n                else if (2 * t3[i] < 1) { c[i] = t2; }\r\n                else if (3 * t3[i] < 2) { c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6; }\r\n                else { c[i] = t1; }\r\n            }\r\n            (assign = [round$5(c[0] * 255), round$5(c[1] * 255), round$5(c[2] * 255)], r = assign[0], g = assign[1], b = assign[2]);\r\n        }\r\n        if (args.length > 3) {\r\n            // keep alpha channel\r\n            return [r, g, b, args[3]];\r\n        }\r\n        return [r, g, b, 1];\r\n    };\r\n\r\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\r\n    var RE_RGBA =\r\n        /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n    var RE_RGB_PCT =\r\n        /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\r\n    var RE_RGBA_PCT =\r\n        /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n    var RE_HSL =\r\n        /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\r\n    var RE_HSLA =\r\n        /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\r\n\r\n    var round$4 = Math.round;\r\n\r\n    var css2rgb = function (css) {\r\n        css = css.toLowerCase().trim();\r\n        var m;\r\n\r\n        if (input.format.named) {\r\n            try {\r\n                return input.format.named(css);\r\n                // eslint-disable-next-line\r\n            } catch (e) {}\r\n        }\r\n\r\n        // rgb(250,20,0)\r\n        if ((m = css.match(RE_RGB))) {\r\n            var rgb = m.slice(1, 4);\r\n            for (var i = 0; i < 3; i++) {\r\n                rgb[i] = +rgb[i];\r\n            }\r\n            rgb[3] = 1; // default alpha\r\n            return rgb;\r\n        }\r\n\r\n        // rgba(250,20,0,0.4)\r\n        if ((m = css.match(RE_RGBA))) {\r\n            var rgb$1 = m.slice(1, 5);\r\n            for (var i$1 = 0; i$1 < 4; i$1++) {\r\n                rgb$1[i$1] = +rgb$1[i$1];\r\n            }\r\n            return rgb$1;\r\n        }\r\n\r\n        // rgb(100%,0%,0%)\r\n        if ((m = css.match(RE_RGB_PCT))) {\r\n            var rgb$2 = m.slice(1, 4);\r\n            for (var i$2 = 0; i$2 < 3; i$2++) {\r\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\r\n            }\r\n            rgb$2[3] = 1; // default alpha\r\n            return rgb$2;\r\n        }\r\n\r\n        // rgba(100%,0%,0%,0.4)\r\n        if ((m = css.match(RE_RGBA_PCT))) {\r\n            var rgb$3 = m.slice(1, 5);\r\n            for (var i$3 = 0; i$3 < 3; i$3++) {\r\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\r\n            }\r\n            rgb$3[3] = +rgb$3[3];\r\n            return rgb$3;\r\n        }\r\n\r\n        // hsl(0,100%,50%)\r\n        if ((m = css.match(RE_HSL))) {\r\n            var hsl = m.slice(1, 4);\r\n            hsl[1] *= 0.01;\r\n            hsl[2] *= 0.01;\r\n            var rgb$4 = hsl2rgb(hsl);\r\n            rgb$4[3] = 1;\r\n            return rgb$4;\r\n        }\r\n\r\n        // hsla(0,100%,50%,0.5)\r\n        if ((m = css.match(RE_HSLA))) {\r\n            var hsl$1 = m.slice(1, 4);\r\n            hsl$1[1] *= 0.01;\r\n            hsl$1[2] *= 0.01;\r\n            var rgb$5 = hsl2rgb(hsl$1);\r\n            rgb$5[3] = +m[4]; // default alpha = 1\r\n            return rgb$5;\r\n        }\r\n    };\r\n\r\n    css2rgb.test = function (s) {\r\n        return (\r\n            RE_RGB.test(s) ||\r\n            RE_RGBA.test(s) ||\r\n            RE_RGB_PCT.test(s) ||\r\n            RE_RGBA_PCT.test(s) ||\r\n            RE_HSL.test(s) ||\r\n            RE_HSLA.test(s)\r\n        );\r\n    };\r\n\r\n    Color.prototype.css = function (mode) {\r\n        return rgb2css(this._rgb, mode);\r\n    };\r\n\r\n    chroma.css = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['css']) ));\r\n    };\r\n\r\n    input.format.css = css2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 5,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (!rest.length && type(h) === 'string' && css2rgb.test(h)) {\r\n                return 'css';\r\n            }\r\n        }\r\n    });\r\n\r\n    input.format.gl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgb = unpack(args, 'rgba');\r\n        rgb[0] *= 255;\r\n        rgb[1] *= 255;\r\n        rgb[2] *= 255;\r\n        return rgb;\r\n    };\r\n\r\n    chroma.gl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['gl']) ));\r\n    };\r\n\r\n    Color.prototype.gl = function () {\r\n        var rgb = this._rgb;\r\n        return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]];\r\n    };\r\n\r\n    var floor$3 = Math.floor;\r\n\r\n    /*\r\n     * this is basically just HSV with some minor tweaks\r\n     *\r\n     * hue.. [0..360]\r\n     * chroma .. [0..1]\r\n     * grayness .. [0..1]\r\n     */\r\n\r\n    var hcg2rgb = function () {\r\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack(args, 'hcg');\r\n        var h = args[0];\r\n        var c = args[1];\r\n        var _g = args[2];\r\n        var r, g, b;\r\n        _g = _g * 255;\r\n        var _c = c * 255;\r\n        if (c === 0) {\r\n            r = g = b = _g;\r\n        } else {\r\n            if (h === 360) { h = 0; }\r\n            if (h > 360) { h -= 360; }\r\n            if (h < 0) { h += 360; }\r\n            h /= 60;\r\n            var i = floor$3(h);\r\n            var f = h - i;\r\n            var p = _g * (1 - c);\r\n            var q = p + _c * (1 - f);\r\n            var t = p + _c * f;\r\n            var v = p + _c;\r\n            switch (i) {\r\n                case 0:\r\n                    (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]);\r\n                    break;\r\n                case 1:\r\n                    (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]);\r\n                    break;\r\n                case 2:\r\n                    (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]);\r\n                    break;\r\n                case 3:\r\n                    (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]);\r\n                    break;\r\n                case 4:\r\n                    (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]);\r\n                    break;\r\n                case 5:\r\n                    (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]);\r\n                    break;\r\n            }\r\n        }\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var rgb2hcg = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var minRgb = min$3(r, g, b);\r\n        var maxRgb = max$3(r, g, b);\r\n        var delta = maxRgb - minRgb;\r\n        var c = (delta * 100) / 255;\r\n        var _g = (minRgb / (255 - delta)) * 100;\r\n        var h;\r\n        if (delta === 0) {\r\n            h = Number.NaN;\r\n        } else {\r\n            if (r === maxRgb) { h = (g - b) / delta; }\r\n            if (g === maxRgb) { h = 2 + (b - r) / delta; }\r\n            if (b === maxRgb) { h = 4 + (r - g) / delta; }\r\n            h *= 60;\r\n            if (h < 0) { h += 360; }\r\n        }\r\n        return [h, c, _g];\r\n    };\r\n\r\n    Color.prototype.hcg = function () {\r\n        return rgb2hcg(this._rgb);\r\n    };\r\n\r\n    chroma.hcg = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hcg']) ));\r\n    };\r\n\r\n    input.format.hcg = hcg2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 1,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'hcg');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'hcg';\r\n            }\r\n        }\r\n    });\r\n\r\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\r\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\r\n\r\n    var hex2rgb = function (hex) {\r\n        if (hex.match(RE_HEX)) {\r\n            // remove optional leading #\r\n            if (hex.length === 4 || hex.length === 7) {\r\n                hex = hex.substr(1);\r\n            }\r\n            // expand short-notation to full six-digit\r\n            if (hex.length === 3) {\r\n                hex = hex.split('');\r\n                hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n            }\r\n            var u = parseInt(hex, 16);\r\n            var r = u >> 16;\r\n            var g = (u >> 8) & 0xff;\r\n            var b = u & 0xff;\r\n            return [r, g, b, 1];\r\n        }\r\n\r\n        // match rgba hex format, eg #FF000077\r\n        if (hex.match(RE_HEXA)) {\r\n            if (hex.length === 5 || hex.length === 9) {\r\n                // remove optional leading #\r\n                hex = hex.substr(1);\r\n            }\r\n            // expand short-notation to full eight-digit\r\n            if (hex.length === 4) {\r\n                hex = hex.split('');\r\n                hex =\r\n                    hex[0] +\r\n                    hex[0] +\r\n                    hex[1] +\r\n                    hex[1] +\r\n                    hex[2] +\r\n                    hex[2] +\r\n                    hex[3] +\r\n                    hex[3];\r\n            }\r\n            var u$1 = parseInt(hex, 16);\r\n            var r$1 = (u$1 >> 24) & 0xff;\r\n            var g$1 = (u$1 >> 16) & 0xff;\r\n            var b$1 = (u$1 >> 8) & 0xff;\r\n            var a = Math.round(((u$1 & 0xff) / 0xff) * 100) / 100;\r\n            return [r$1, g$1, b$1, a];\r\n        }\r\n\r\n        // we used to check for css colors here\r\n        // if _input.css? and rgb = _input.css hex\r\n        //     return rgb\r\n\r\n        throw new Error((\"unknown hex color: \" + hex));\r\n    };\r\n\r\n    var round$3 = Math.round;\r\n\r\n    var rgb2hex = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgba');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var a = ref[3];\r\n        var mode = last(args) || 'auto';\r\n        if (a === undefined) { a = 1; }\r\n        if (mode === 'auto') {\r\n            mode = a < 1 ? 'rgba' : 'rgb';\r\n        }\r\n        r = round$3(r);\r\n        g = round$3(g);\r\n        b = round$3(b);\r\n        var u = (r << 16) | (g << 8) | b;\r\n        var str = '000000' + u.toString(16); //#.toUpperCase();\r\n        str = str.substr(str.length - 6);\r\n        var hxa = '0' + round$3(a * 255).toString(16);\r\n        hxa = hxa.substr(hxa.length - 2);\r\n        switch (mode.toLowerCase()) {\r\n            case 'rgba':\r\n                return (\"#\" + str + hxa);\r\n            case 'argb':\r\n                return (\"#\" + hxa + str);\r\n            default:\r\n                return (\"#\" + str);\r\n        }\r\n    };\r\n\r\n    Color.prototype.hex = function (mode) {\r\n        return rgb2hex(this._rgb, mode);\r\n    };\r\n\r\n    chroma.hex = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hex']) ));\r\n    };\r\n\r\n    input.format.hex = hex2rgb;\r\n    input.autodetect.push({\r\n        p: 4,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (\r\n                !rest.length &&\r\n                type(h) === 'string' &&\r\n                [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0\r\n            ) {\r\n                return 'hex';\r\n            }\r\n        }\r\n    });\r\n\r\n    var cos$4 = Math.cos;\r\n\r\n    /*\r\n     * hue [0..360]\r\n     * saturation [0..1]\r\n     * intensity [0..1]\r\n     */\r\n    var hsi2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        borrowed from here:\r\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\r\n        */\r\n        args = unpack(args, 'hsi');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var i = args[2];\r\n        var r, g, b;\r\n\r\n        if (isNaN(h)) { h = 0; }\r\n        if (isNaN(s)) { s = 0; }\r\n        // normalize hue\r\n        if (h > 360) { h -= 360; }\r\n        if (h < 0) { h += 360; }\r\n        h /= 360;\r\n        if (h < 1 / 3) {\r\n            b = (1 - s) / 3;\r\n            r = (1 + (s * cos$4(TWOPI * h)) / cos$4(PITHIRD - TWOPI * h)) / 3;\r\n            g = 1 - (b + r);\r\n        } else if (h < 2 / 3) {\r\n            h -= 1 / 3;\r\n            r = (1 - s) / 3;\r\n            g = (1 + (s * cos$4(TWOPI * h)) / cos$4(PITHIRD - TWOPI * h)) / 3;\r\n            b = 1 - (r + g);\r\n        } else {\r\n            h -= 2 / 3;\r\n            g = (1 - s) / 3;\r\n            b = (1 + (s * cos$4(TWOPI * h)) / cos$4(PITHIRD - TWOPI * h)) / 3;\r\n            r = 1 - (g + b);\r\n        }\r\n        r = limit(i * r * 3);\r\n        g = limit(i * g * 3);\r\n        b = limit(i * b * 3);\r\n        return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var min$2 = Math.min;\r\n    var sqrt$4 = Math.sqrt;\r\n    var acos = Math.acos;\r\n\r\n    var rgb2hsi = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        borrowed from here:\r\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\r\n        */\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n        var h;\r\n        var min_ = min$2(r, g, b);\r\n        var i = (r + g + b) / 3;\r\n        var s = i > 0 ? 1 - min_ / i : 0;\r\n        if (s === 0) {\r\n            h = NaN;\r\n        } else {\r\n            h = (r - g + (r - b)) / 2;\r\n            h /= sqrt$4((r - g) * (r - g) + (r - b) * (g - b));\r\n            h = acos(h);\r\n            if (b > g) {\r\n                h = TWOPI - h;\r\n            }\r\n            h /= TWOPI;\r\n        }\r\n        return [h * 360, s, i];\r\n    };\r\n\r\n    Color.prototype.hsi = function () {\r\n        return rgb2hsi(this._rgb);\r\n    };\r\n\r\n    chroma.hsi = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hsi']) ));\r\n    };\r\n\r\n    input.format.hsi = hsi2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'hsi');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'hsi';\r\n            }\r\n        }\r\n    });\r\n\r\n    Color.prototype.hsl = function () {\r\n        return rgb2hsl$1(this._rgb);\r\n    };\r\n\r\n    chroma.hsl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hsl']) ));\r\n    };\r\n\r\n    input.format.hsl = hsl2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'hsl');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'hsl';\r\n            }\r\n        }\r\n    });\r\n\r\n    var floor$2 = Math.floor;\r\n\r\n    var hsv2rgb = function () {\r\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\r\n\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n        args = unpack(args, 'hsv');\r\n        var h = args[0];\r\n        var s = args[1];\r\n        var v = args[2];\r\n        var r, g, b;\r\n        v *= 255;\r\n        if (s === 0) {\r\n            r = g = b = v;\r\n        } else {\r\n            if (h === 360) { h = 0; }\r\n            if (h > 360) { h -= 360; }\r\n            if (h < 0) { h += 360; }\r\n            h /= 60;\r\n\r\n            var i = floor$2(h);\r\n            var f = h - i;\r\n            var p = v * (1 - s);\r\n            var q = v * (1 - s * f);\r\n            var t = v * (1 - s * (1 - f));\r\n\r\n            switch (i) {\r\n                case 0:\r\n                    (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]);\r\n                    break;\r\n                case 1:\r\n                    (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]);\r\n                    break;\r\n                case 2:\r\n                    (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]);\r\n                    break;\r\n                case 3:\r\n                    (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]);\r\n                    break;\r\n                case 4:\r\n                    (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]);\r\n                    break;\r\n                case 5:\r\n                    (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]);\r\n                    break;\r\n            }\r\n        }\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var min$1 = Math.min;\r\n    var max$1 = Math.max;\r\n\r\n    /*\r\n     * supported arguments:\r\n     * - rgb2hsv(r,g,b)\r\n     * - rgb2hsv([r,g,b])\r\n     * - rgb2hsv({r,g,b})\r\n     */\r\n    var rgb2hsl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'rgb');\r\n        var r = args[0];\r\n        var g = args[1];\r\n        var b = args[2];\r\n        var min_ = min$1(r, g, b);\r\n        var max_ = max$1(r, g, b);\r\n        var delta = max_ - min_;\r\n        var h, s, v;\r\n        v = max_ / 255.0;\r\n        if (max_ === 0) {\r\n            h = Number.NaN;\r\n            s = 0;\r\n        } else {\r\n            s = delta / max_;\r\n            if (r === max_) { h = (g - b) / delta; }\r\n            if (g === max_) { h = 2 + (b - r) / delta; }\r\n            if (b === max_) { h = 4 + (r - g) / delta; }\r\n            h *= 60;\r\n            if (h < 0) { h += 360; }\r\n        }\r\n        return [h, s, v];\r\n    };\r\n\r\n    Color.prototype.hsv = function () {\r\n        return rgb2hsl(this._rgb);\r\n    };\r\n\r\n    chroma.hsv = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hsv']) ));\r\n    };\r\n\r\n    input.format.hsv = hsv2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'hsv');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'hsv';\r\n            }\r\n        }\r\n    });\r\n\r\n    var LAB_CONSTANTS = {\r\n        // Corresponds roughly to RGB brighter/darker\r\n        Kn: 18,\r\n\r\n        // D65 standard referent\r\n        Xn: 0.95047,\r\n        Yn: 1,\r\n        Zn: 1.08883,\r\n\r\n        t0: 0.137931034, // 4 / 29\r\n        t1: 0.206896552, // 6 / 29\r\n        t2: 0.12841855, // 3 * t1 * t1\r\n        t3: 0.008856452 // t1 * t1 * t1\r\n    };\r\n\r\n    var pow$a = Math.pow;\r\n\r\n    /*\r\n     * L* [0..100]\r\n     * a [-100..100]\r\n     * b [-100..100]\r\n     */\r\n    var lab2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'lab');\r\n        var l = args[0];\r\n        var a = args[1];\r\n        var b = args[2];\r\n        var x, y, z, r, g, b_;\r\n\r\n        y = (l + 16) / 116;\r\n        x = isNaN(a) ? y : y + a / 500;\r\n        z = isNaN(b) ? y : y - b / 200;\r\n\r\n        y = LAB_CONSTANTS.Yn * lab_xyz(y);\r\n        x = LAB_CONSTANTS.Xn * lab_xyz(x);\r\n        z = LAB_CONSTANTS.Zn * lab_xyz(z);\r\n\r\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z); // D65 -> sRGB\r\n        g = xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z);\r\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\r\n\r\n        return [r, g, b_, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var xyz_rgb = function (r) {\r\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$a(r, 1 / 2.4) - 0.055);\r\n    };\r\n\r\n    var lab_xyz = function (t) {\r\n        return t > LAB_CONSTANTS.t1\r\n            ? t * t * t\r\n            : LAB_CONSTANTS.t2 * (t - LAB_CONSTANTS.t0);\r\n    };\r\n\r\n    var pow$9 = Math.pow;\r\n\r\n    var rgb2lab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2xyz(r, g, b);\r\n        var x = ref$1[0];\r\n        var y = ref$1[1];\r\n        var z = ref$1[2];\r\n        var l = 116 * y - 16;\r\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\r\n    };\r\n\r\n    var rgb_xyz = function (r) {\r\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\r\n        return pow$9((r + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    var xyz_lab = function (t) {\r\n        if (t > LAB_CONSTANTS.t3) { return pow$9(t, 1 / 3); }\r\n        return t / LAB_CONSTANTS.t2 + LAB_CONSTANTS.t0;\r\n    };\r\n\r\n    var rgb2xyz = function (r, g, b) {\r\n        r = rgb_xyz(r);\r\n        g = rgb_xyz(g);\r\n        b = rgb_xyz(b);\r\n        var x = xyz_lab(\r\n            (0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS.Xn\r\n        );\r\n        var y = xyz_lab(\r\n            (0.2126729 * r + 0.7151522 * g + 0.072175 * b) / LAB_CONSTANTS.Yn\r\n        );\r\n        var z = xyz_lab(\r\n            (0.0193339 * r + 0.119192 * g + 0.9503041 * b) / LAB_CONSTANTS.Zn\r\n        );\r\n        return [x, y, z];\r\n    };\r\n\r\n    Color.prototype.lab = function () {\r\n        return rgb2lab(this._rgb);\r\n    };\r\n\r\n    chroma.lab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['lab']) ));\r\n    };\r\n\r\n    input.format.lab = lab2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 2,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'lab');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'lab';\r\n            }\r\n        }\r\n    });\r\n\r\n    var sin$3 = Math.sin;\r\n    var cos$3 = Math.cos;\r\n\r\n    var lch2lab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        /*\r\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\r\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\r\n        out of gamut if the parameters are in the range 0-1.\r\n\r\n        A saturation multiplier was added by Gregor Aisch\r\n        */\r\n        var ref = unpack(args, 'lch');\r\n        var l = ref[0];\r\n        var c = ref[1];\r\n        var h = ref[2];\r\n        if (isNaN(h)) { h = 0; }\r\n        h = h * DEG2RAD;\r\n        return [l, cos$3(h) * c, sin$3(h) * c];\r\n    };\r\n\r\n    var lch2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'lch');\r\n        var l = args[0];\r\n        var c = args[1];\r\n        var h = args[2];\r\n        var ref = lch2lab(l, c, h);\r\n        var L = ref[0];\r\n        var a = ref[1];\r\n        var b_ = ref[2];\r\n        var ref$1 = lab2rgb(L, a, b_);\r\n        var r = ref$1[0];\r\n        var g = ref$1[1];\r\n        var b = ref$1[2];\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var hcl2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var hcl = unpack(args, 'hcl').reverse();\r\n        return lch2rgb.apply(void 0, hcl);\r\n    };\r\n\r\n    var sqrt$3 = Math.sqrt;\r\n    var atan2$2 = Math.atan2;\r\n    var round$2 = Math.round;\r\n\r\n    var lab2lch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'lab');\r\n        var l = ref[0];\r\n        var a = ref[1];\r\n        var b = ref[2];\r\n        var c = sqrt$3(a * a + b * b);\r\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\r\n        if (round$2(c * 10000) === 0) { h = Number.NaN; }\r\n        return [l, c, h];\r\n    };\r\n\r\n    var rgb2lch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2lab(r, g, b);\r\n        var l = ref$1[0];\r\n        var a = ref$1[1];\r\n        var b_ = ref$1[2];\r\n        return lab2lch(l, a, b_);\r\n    };\r\n\r\n    Color.prototype.lch = function () {\r\n        return rgb2lch(this._rgb);\r\n    };\r\n    Color.prototype.hcl = function () {\r\n        return rgb2lch(this._rgb).reverse();\r\n    };\r\n\r\n    chroma.lch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['lch']) ));\r\n    };\r\n    chroma.hcl = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['hcl']) ));\r\n    };\r\n\r\n    input.format.lch = lch2rgb;\r\n    input.format.hcl = hcl2rgb;\r\n    ['lch', 'hcl'].forEach(function (m) { return input.autodetect.push({\r\n            p: 2,\r\n            test: function () {\r\n                var args = [], len = arguments.length;\r\n                while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n                args = unpack(args, m);\r\n                if (type(args) === 'array' && args.length === 3) {\r\n                    return m;\r\n                }\r\n            }\r\n        }); }\r\n    );\r\n\r\n    /**\r\n    \tX11 color names\r\n\r\n    \thttp://www.w3.org/TR/css3-color/#svg-color\r\n    */\r\n\r\n    var w3cx11 = {\r\n        aliceblue: '#f0f8ff',\r\n        antiquewhite: '#faebd7',\r\n        aqua: '#00ffff',\r\n        aquamarine: '#7fffd4',\r\n        azure: '#f0ffff',\r\n        beige: '#f5f5dc',\r\n        bisque: '#ffe4c4',\r\n        black: '#000000',\r\n        blanchedalmond: '#ffebcd',\r\n        blue: '#0000ff',\r\n        blueviolet: '#8a2be2',\r\n        brown: '#a52a2a',\r\n        burlywood: '#deb887',\r\n        cadetblue: '#5f9ea0',\r\n        chartreuse: '#7fff00',\r\n        chocolate: '#d2691e',\r\n        coral: '#ff7f50',\r\n        cornflowerblue: '#6495ed',\r\n        cornsilk: '#fff8dc',\r\n        crimson: '#dc143c',\r\n        cyan: '#00ffff',\r\n        darkblue: '#00008b',\r\n        darkcyan: '#008b8b',\r\n        darkgoldenrod: '#b8860b',\r\n        darkgray: '#a9a9a9',\r\n        darkgreen: '#006400',\r\n        darkgrey: '#a9a9a9',\r\n        darkkhaki: '#bdb76b',\r\n        darkmagenta: '#8b008b',\r\n        darkolivegreen: '#556b2f',\r\n        darkorange: '#ff8c00',\r\n        darkorchid: '#9932cc',\r\n        darkred: '#8b0000',\r\n        darksalmon: '#e9967a',\r\n        darkseagreen: '#8fbc8f',\r\n        darkslateblue: '#483d8b',\r\n        darkslategray: '#2f4f4f',\r\n        darkslategrey: '#2f4f4f',\r\n        darkturquoise: '#00ced1',\r\n        darkviolet: '#9400d3',\r\n        deeppink: '#ff1493',\r\n        deepskyblue: '#00bfff',\r\n        dimgray: '#696969',\r\n        dimgrey: '#696969',\r\n        dodgerblue: '#1e90ff',\r\n        firebrick: '#b22222',\r\n        floralwhite: '#fffaf0',\r\n        forestgreen: '#228b22',\r\n        fuchsia: '#ff00ff',\r\n        gainsboro: '#dcdcdc',\r\n        ghostwhite: '#f8f8ff',\r\n        gold: '#ffd700',\r\n        goldenrod: '#daa520',\r\n        gray: '#808080',\r\n        green: '#008000',\r\n        greenyellow: '#adff2f',\r\n        grey: '#808080',\r\n        honeydew: '#f0fff0',\r\n        hotpink: '#ff69b4',\r\n        indianred: '#cd5c5c',\r\n        indigo: '#4b0082',\r\n        ivory: '#fffff0',\r\n        khaki: '#f0e68c',\r\n        laserlemon: '#ffff54',\r\n        lavender: '#e6e6fa',\r\n        lavenderblush: '#fff0f5',\r\n        lawngreen: '#7cfc00',\r\n        lemonchiffon: '#fffacd',\r\n        lightblue: '#add8e6',\r\n        lightcoral: '#f08080',\r\n        lightcyan: '#e0ffff',\r\n        lightgoldenrod: '#fafad2',\r\n        lightgoldenrodyellow: '#fafad2',\r\n        lightgray: '#d3d3d3',\r\n        lightgreen: '#90ee90',\r\n        lightgrey: '#d3d3d3',\r\n        lightpink: '#ffb6c1',\r\n        lightsalmon: '#ffa07a',\r\n        lightseagreen: '#20b2aa',\r\n        lightskyblue: '#87cefa',\r\n        lightslategray: '#778899',\r\n        lightslategrey: '#778899',\r\n        lightsteelblue: '#b0c4de',\r\n        lightyellow: '#ffffe0',\r\n        lime: '#00ff00',\r\n        limegreen: '#32cd32',\r\n        linen: '#faf0e6',\r\n        magenta: '#ff00ff',\r\n        maroon: '#800000',\r\n        maroon2: '#7f0000',\r\n        maroon3: '#b03060',\r\n        mediumaquamarine: '#66cdaa',\r\n        mediumblue: '#0000cd',\r\n        mediumorchid: '#ba55d3',\r\n        mediumpurple: '#9370db',\r\n        mediumseagreen: '#3cb371',\r\n        mediumslateblue: '#7b68ee',\r\n        mediumspringgreen: '#00fa9a',\r\n        mediumturquoise: '#48d1cc',\r\n        mediumvioletred: '#c71585',\r\n        midnightblue: '#191970',\r\n        mintcream: '#f5fffa',\r\n        mistyrose: '#ffe4e1',\r\n        moccasin: '#ffe4b5',\r\n        navajowhite: '#ffdead',\r\n        navy: '#000080',\r\n        oldlace: '#fdf5e6',\r\n        olive: '#808000',\r\n        olivedrab: '#6b8e23',\r\n        orange: '#ffa500',\r\n        orangered: '#ff4500',\r\n        orchid: '#da70d6',\r\n        palegoldenrod: '#eee8aa',\r\n        palegreen: '#98fb98',\r\n        paleturquoise: '#afeeee',\r\n        palevioletred: '#db7093',\r\n        papayawhip: '#ffefd5',\r\n        peachpuff: '#ffdab9',\r\n        peru: '#cd853f',\r\n        pink: '#ffc0cb',\r\n        plum: '#dda0dd',\r\n        powderblue: '#b0e0e6',\r\n        purple: '#800080',\r\n        purple2: '#7f007f',\r\n        purple3: '#a020f0',\r\n        rebeccapurple: '#663399',\r\n        red: '#ff0000',\r\n        rosybrown: '#bc8f8f',\r\n        royalblue: '#4169e1',\r\n        saddlebrown: '#8b4513',\r\n        salmon: '#fa8072',\r\n        sandybrown: '#f4a460',\r\n        seagreen: '#2e8b57',\r\n        seashell: '#fff5ee',\r\n        sienna: '#a0522d',\r\n        silver: '#c0c0c0',\r\n        skyblue: '#87ceeb',\r\n        slateblue: '#6a5acd',\r\n        slategray: '#708090',\r\n        slategrey: '#708090',\r\n        snow: '#fffafa',\r\n        springgreen: '#00ff7f',\r\n        steelblue: '#4682b4',\r\n        tan: '#d2b48c',\r\n        teal: '#008080',\r\n        thistle: '#d8bfd8',\r\n        tomato: '#ff6347',\r\n        turquoise: '#40e0d0',\r\n        violet: '#ee82ee',\r\n        wheat: '#f5deb3',\r\n        white: '#ffffff',\r\n        whitesmoke: '#f5f5f5',\r\n        yellow: '#ffff00',\r\n        yellowgreen: '#9acd32'\r\n    };\r\n\r\n    Color.prototype.name = function () {\r\n        var hex = rgb2hex(this._rgb, 'rgb');\r\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\r\n            var n = list[i];\r\n\r\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\r\n        }\r\n        return hex;\r\n    };\r\n\r\n    input.format.named = function (name) {\r\n        name = name.toLowerCase();\r\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\r\n        throw new Error('unknown color name: ' + name);\r\n    };\r\n\r\n    input.autodetect.push({\r\n        p: 5,\r\n        test: function (h) {\r\n            var rest = [], len = arguments.length - 1;\r\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n            if (!rest.length && type(h) === 'string' && w3cx11[h.toLowerCase()]) {\r\n                return 'named';\r\n            }\r\n        }\r\n    });\r\n\r\n    var num2rgb = function (num) {\r\n        if (type(num) == 'number' && num >= 0 && num <= 0xffffff) {\r\n            var r = num >> 16;\r\n            var g = (num >> 8) & 0xff;\r\n            var b = num & 0xff;\r\n            return [r, g, b, 1];\r\n        }\r\n        throw new Error('unknown num color: ' + num);\r\n    };\r\n\r\n    var rgb2num = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        return (r << 16) + (g << 8) + b;\r\n    };\r\n\r\n    Color.prototype.num = function () {\r\n        return rgb2num(this._rgb);\r\n    };\r\n\r\n    chroma.num = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['num']) ));\r\n    };\r\n\r\n    input.format.num = num2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 5,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            if (\r\n                args.length === 1 &&\r\n                type(args[0]) === 'number' &&\r\n                args[0] >= 0 &&\r\n                args[0] <= 0xffffff\r\n            ) {\r\n                return 'num';\r\n            }\r\n        }\r\n    });\r\n\r\n    var round$1 = Math.round;\r\n\r\n    Color.prototype.rgb = function (rnd) {\r\n        if ( rnd === void 0 ) rnd = true;\r\n\r\n        if (rnd === false) { return this._rgb.slice(0, 3); }\r\n        return this._rgb.slice(0, 3).map(round$1);\r\n    };\r\n\r\n    Color.prototype.rgba = function (rnd) {\r\n        if ( rnd === void 0 ) rnd = true;\r\n\r\n        return this._rgb.slice(0, 4).map(function (v, i) {\r\n            return i < 3 ? (rnd === false ? v : round$1(v)) : v;\r\n        });\r\n    };\r\n\r\n    chroma.rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['rgb']) ));\r\n    };\r\n\r\n    input.format.rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgba = unpack(args, 'rgba');\r\n        if (rgba[3] === undefined) { rgba[3] = 1; }\r\n        return rgba;\r\n    };\r\n\r\n    input.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'rgba');\r\n            if (\r\n                type(args) === 'array' &&\r\n                (args.length === 3 ||\r\n                    (args.length === 4 &&\r\n                        type(args[3]) == 'number' &&\r\n                        args[3] >= 0 &&\r\n                        args[3] <= 1))\r\n            ) {\r\n                return 'rgb';\r\n            }\r\n        }\r\n    });\r\n\r\n    /*\r\n     * Based on implementation by Neil Bartlett\r\n     * https://github.com/neilbartlett/color-temperature\r\n     */\r\n\r\n    var log$1 = Math.log;\r\n\r\n    var temperature2rgb = function (kelvin) {\r\n        var temp = kelvin / 100;\r\n        var r, g, b;\r\n        if (temp < 66) {\r\n            r = 255;\r\n            g =\r\n                temp < 6\r\n                    ? 0\r\n                    : -155.25485562709179 -\r\n                      0.44596950469579133 * (g = temp - 2) +\r\n                      104.49216199393888 * log$1(g);\r\n            b =\r\n                temp < 20\r\n                    ? 0\r\n                    : -254.76935184120902 +\r\n                      0.8274096064007395 * (b = temp - 10) +\r\n                      115.67994401066147 * log$1(b);\r\n        } else {\r\n            r =\r\n                351.97690566805693 +\r\n                0.114206453784165 * (r = temp - 55) -\r\n                40.25366309332127 * log$1(r);\r\n            g =\r\n                325.4494125711974 +\r\n                0.07943456536662342 * (g = temp - 50) -\r\n                28.0852963507957 * log$1(g);\r\n            b = 255;\r\n        }\r\n        return [r, g, b, 1];\r\n    };\r\n\r\n    /*\r\n     * Based on implementation by Neil Bartlett\r\n     * https://github.com/neilbartlett/color-temperature\r\n     **/\r\n\r\n    var round = Math.round;\r\n\r\n    var rgb2temperature = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var rgb = unpack(args, 'rgb');\r\n        var r = rgb[0],\r\n            b = rgb[2];\r\n        var minTemp = 1000;\r\n        var maxTemp = 40000;\r\n        var eps = 0.4;\r\n        var temp;\r\n        while (maxTemp - minTemp > eps) {\r\n            temp = (maxTemp + minTemp) * 0.5;\r\n            var rgb$1 = temperature2rgb(temp);\r\n            if (rgb$1[2] / rgb$1[0] >= b / r) {\r\n                maxTemp = temp;\r\n            } else {\r\n                minTemp = temp;\r\n            }\r\n        }\r\n        return round(temp);\r\n    };\r\n\r\n    Color.prototype.temp =\r\n        Color.prototype.kelvin =\r\n        Color.prototype.temperature =\r\n            function () {\r\n                return rgb2temperature(this._rgb);\r\n            };\r\n\r\n    chroma.temp =\r\n        chroma.kelvin =\r\n        chroma.temperature =\r\n            function () {\r\n                var args = [], len = arguments.length;\r\n                while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n                return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['temp']) ));\r\n    };\r\n\r\n    input.format.temp =\r\n        input.format.kelvin =\r\n        input.format.temperature =\r\n            temperature2rgb;\r\n\r\n    var pow$8 = Math.pow;\r\n    var sign$1 = Math.sign;\r\n\r\n    /*\r\n     * L* [0..100]\r\n     * a [-100..100]\r\n     * b [-100..100]\r\n     */\r\n    var oklab2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'lab');\r\n        var L = args[0];\r\n        var a = args[1];\r\n        var b = args[2];\r\n\r\n        var l = pow$8(L + 0.3963377774 * a + 0.2158037573 * b, 3);\r\n        var m = pow$8(L - 0.1055613458 * a - 0.0638541728 * b, 3);\r\n        var s = pow$8(L - 0.0894841775 * a - 1.291485548 * b, 3);\r\n\r\n        return [\r\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\r\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\r\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\r\n            args.length > 3 ? args[3] : 1\r\n        ];\r\n    };\r\n\r\n    function lrgb2rgb(c) {\r\n        var abs = Math.abs(c);\r\n        if (abs > 0.0031308) {\r\n            return (sign$1(c) || 1) * (1.055 * pow$8(abs, 1 / 2.4) - 0.055);\r\n        }\r\n        return c * 12.92;\r\n    }\r\n\r\n    var cbrt = Math.cbrt;\r\n    var pow$7 = Math.pow;\r\n    var sign = Math.sign;\r\n\r\n    var rgb2oklab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        // OKLab color space implementation taken from\r\n        // https://bottosson.github.io/posts/oklab/\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = [\r\n            rgb2lrgb(r / 255),\r\n            rgb2lrgb(g / 255),\r\n            rgb2lrgb(b / 255)\r\n        ];\r\n        var lr = ref$1[0];\r\n        var lg = ref$1[1];\r\n        var lb = ref$1[2];\r\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\r\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\r\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\r\n\r\n        return [\r\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\r\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\r\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\r\n        ];\r\n    };\r\n\r\n    function rgb2lrgb(c) {\r\n        var abs = Math.abs(c);\r\n        if (abs < 0.04045) {\r\n            return c / 12.92;\r\n        }\r\n        return (sign(c) || 1) * pow$7((abs + 0.055) / 1.055, 2.4);\r\n    }\r\n\r\n    Color.prototype.oklab = function () {\r\n        return rgb2oklab(this._rgb);\r\n    };\r\n\r\n    chroma.oklab = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['oklab']) ));\r\n    };\r\n\r\n    input.format.oklab = oklab2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'oklab');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'oklab';\r\n            }\r\n        }\r\n    });\r\n\r\n    var oklch2rgb = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        args = unpack(args, 'lch');\r\n        var l = args[0];\r\n        var c = args[1];\r\n        var h = args[2];\r\n        var ref = lch2lab(l, c, h);\r\n        var L = ref[0];\r\n        var a = ref[1];\r\n        var b_ = ref[2];\r\n        var ref$1 = oklab2rgb(L, a, b_);\r\n        var r = ref$1[0];\r\n        var g = ref$1[1];\r\n        var b = ref$1[2];\r\n        return [r, g, b, args.length > 3 ? args[3] : 1];\r\n    };\r\n\r\n    var rgb2oklch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        var ref = unpack(args, 'rgb');\r\n        var r = ref[0];\r\n        var g = ref[1];\r\n        var b = ref[2];\r\n        var ref$1 = rgb2oklab(r, g, b);\r\n        var l = ref$1[0];\r\n        var a = ref$1[1];\r\n        var b_ = ref$1[2];\r\n        return lab2lch(l, a, b_);\r\n    };\r\n\r\n    Color.prototype.oklch = function () {\r\n        return rgb2oklch(this._rgb);\r\n    };\r\n\r\n    chroma.oklch = function () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        return new (Function.prototype.bind.apply( Color, [ null ].concat( args, ['oklch']) ));\r\n    };\r\n\r\n    input.format.oklch = oklch2rgb;\r\n\r\n    input.autodetect.push({\r\n        p: 3,\r\n        test: function () {\r\n            var args = [], len = arguments.length;\r\n            while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n            args = unpack(args, 'oklch');\r\n            if (type(args) === 'array' && args.length === 3) {\r\n                return 'oklch';\r\n            }\r\n        }\r\n    });\r\n\r\n    Color.prototype.alpha = function (a, mutate) {\r\n        if ( mutate === void 0 ) mutate = false;\r\n\r\n        if (a !== undefined && type(a) === 'number') {\r\n            if (mutate) {\r\n                this._rgb[3] = a;\r\n                return this;\r\n            }\r\n            return new Color([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\r\n        }\r\n        return this._rgb[3];\r\n    };\r\n\r\n    Color.prototype.clipped = function () {\r\n        return this._rgb._clipped || false;\r\n    };\r\n\r\n    Color.prototype.darken = function (amount) {\r\n        if ( amount === void 0 ) amount = 1;\r\n\r\n        var me = this;\r\n        var lab = me.lab();\r\n        lab[0] -= LAB_CONSTANTS.Kn * amount;\r\n        return new Color(lab, 'lab').alpha(me.alpha(), true);\r\n    };\r\n\r\n    Color.prototype.brighten = function (amount) {\r\n        if ( amount === void 0 ) amount = 1;\r\n\r\n        return this.darken(-amount);\r\n    };\r\n\r\n    Color.prototype.darker = Color.prototype.darken;\r\n    Color.prototype.brighter = Color.prototype.brighten;\r\n\r\n    Color.prototype.get = function (mc) {\r\n        var ref = mc.split('.');\r\n        var mode = ref[0];\r\n        var channel = ref[1];\r\n        var src = this[mode]();\r\n        if (channel) {\r\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\r\n            if (i > -1) { return src[i]; }\r\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\r\n        } else {\r\n            return src;\r\n        }\r\n    };\r\n\r\n    var pow$6 = Math.pow;\r\n\r\n    var EPS = 1e-7;\r\n    var MAX_ITER = 20;\r\n\r\n    Color.prototype.luminance = function (lum, mode) {\r\n        if ( mode === void 0 ) mode = 'rgb';\r\n\r\n        if (lum !== undefined && type(lum) === 'number') {\r\n            if (lum === 0) {\r\n                // return pure black\r\n                return new Color([0, 0, 0, this._rgb[3]], 'rgb');\r\n            }\r\n            if (lum === 1) {\r\n                // return pure white\r\n                return new Color([255, 255, 255, this._rgb[3]], 'rgb');\r\n            }\r\n            // compute new color using...\r\n            var cur_lum = this.luminance();\r\n            var max_iter = MAX_ITER;\r\n\r\n            var test = function (low, high) {\r\n                var mid = low.interpolate(high, 0.5, mode);\r\n                var lm = mid.luminance();\r\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\r\n                    // close enough\r\n                    return mid;\r\n                }\r\n                return lm > lum ? test(low, mid) : test(mid, high);\r\n            };\r\n\r\n            var rgb = (\r\n                cur_lum > lum\r\n                    ? test(new Color([0, 0, 0]), this)\r\n                    : test(this, new Color([255, 255, 255]))\r\n            ).rgb();\r\n            return new Color(rgb.concat( [this._rgb[3]]));\r\n        }\r\n        return rgb2luminance.apply(void 0, this._rgb.slice(0, 3));\r\n    };\r\n\r\n    var rgb2luminance = function (r, g, b) {\r\n        // relative luminance\r\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\r\n        r = luminance_x(r);\r\n        g = luminance_x(g);\r\n        b = luminance_x(b);\r\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n    };\r\n\r\n    var luminance_x = function (x) {\r\n        x /= 255;\r\n        return x <= 0.03928 ? x / 12.92 : pow$6((x + 0.055) / 1.055, 2.4);\r\n    };\r\n\r\n    var index = {};\r\n\r\n    function mix (col1, col2, f) {\r\n        if ( f === void 0 ) f = 0.5;\r\n        var rest = [], len = arguments.length - 3;\r\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\r\n\r\n        var mode = rest[0] || 'lrgb';\r\n        if (!index[mode] && !rest.length) {\r\n            // fall back to the first supported mode\r\n            mode = Object.keys(index)[0];\r\n        }\r\n        if (!index[mode]) {\r\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\r\n        }\r\n        if (type(col1) !== 'object') { col1 = new Color(col1); }\r\n        if (type(col2) !== 'object') { col2 = new Color(col2); }\r\n        return index[mode](col1, col2, f).alpha(\r\n            col1.alpha() + f * (col2.alpha() - col1.alpha())\r\n        );\r\n    }\r\n\r\n    Color.prototype.mix = Color.prototype.interpolate = function (\r\n        col2,\r\n        f\r\n    ) {\r\n        if ( f === void 0 ) f = 0.5;\r\n        var rest = [], len = arguments.length - 2;\r\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\r\n\r\n        return mix.apply(void 0, [ this, col2, f ].concat( rest ));\r\n    };\r\n\r\n    Color.prototype.premultiply = function (mutate) {\r\n        if ( mutate === void 0 ) mutate = false;\r\n\r\n        var rgb = this._rgb;\r\n        var a = rgb[3];\r\n        if (mutate) {\r\n            this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a];\r\n            return this;\r\n        } else {\r\n            return new Color([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb');\r\n        }\r\n    };\r\n\r\n    Color.prototype.saturate = function (amount) {\r\n        if ( amount === void 0 ) amount = 1;\r\n\r\n        var me = this;\r\n        var lch = me.lch();\r\n        lch[1] += LAB_CONSTANTS.Kn * amount;\r\n        if (lch[1] < 0) { lch[1] = 0; }\r\n        return new Color(lch, 'lch').alpha(me.alpha(), true);\r\n    };\r\n\r\n    Color.prototype.desaturate = function (amount) {\r\n        if ( amount === void 0 ) amount = 1;\r\n\r\n        return this.saturate(-amount);\r\n    };\r\n\r\n    Color.prototype.set = function (mc, value, mutate) {\r\n        if ( mutate === void 0 ) mutate = false;\r\n\r\n        var ref = mc.split('.');\r\n        var mode = ref[0];\r\n        var channel = ref[1];\r\n        var src = this[mode]();\r\n        if (channel) {\r\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\r\n            if (i > -1) {\r\n                if (type(value) == 'string') {\r\n                    switch (value.charAt(0)) {\r\n                        case '+':\r\n                            src[i] += +value;\r\n                            break;\r\n                        case '-':\r\n                            src[i] += +value;\r\n                            break;\r\n                        case '*':\r\n                            src[i] *= +value.substr(1);\r\n                            break;\r\n                        case '/':\r\n                            src[i] /= +value.substr(1);\r\n                            break;\r\n                        default:\r\n                            src[i] = +value;\r\n                    }\r\n                } else if (type(value) === 'number') {\r\n                    src[i] = value;\r\n                } else {\r\n                    throw new Error(\"unsupported value for Color.set\");\r\n                }\r\n                var out = new Color(src, mode);\r\n                if (mutate) {\r\n                    this._rgb = out._rgb;\r\n                    return this;\r\n                }\r\n                return out;\r\n            }\r\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\r\n        } else {\r\n            return src;\r\n        }\r\n    };\r\n\r\n    Color.prototype.tint = function (f) {\r\n        if ( f === void 0 ) f = 0.5;\r\n        var rest = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n        return mix.apply(void 0, [ this, 'white', f ].concat( rest ));\r\n    };\r\n\r\n    Color.prototype.shade = function (f) {\r\n        if ( f === void 0 ) f = 0.5;\r\n        var rest = [], len = arguments.length - 1;\r\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\r\n\r\n        return mix.apply(void 0, [ this, 'black', f ].concat( rest ));\r\n    };\r\n\r\n    var rgb = function (col1, col2, f) {\r\n        var xyz0 = col1._rgb;\r\n        var xyz1 = col2._rgb;\r\n        return new Color(\r\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\r\n            'rgb'\r\n        );\r\n    };\r\n\r\n    // register interpolator\r\n    index.rgb = rgb;\r\n\r\n    var sqrt$2 = Math.sqrt;\r\n    var pow$5 = Math.pow;\r\n\r\n    var lrgb = function (col1, col2, f) {\r\n        var ref = col1._rgb;\r\n        var x1 = ref[0];\r\n        var y1 = ref[1];\r\n        var z1 = ref[2];\r\n        var ref$1 = col2._rgb;\r\n        var x2 = ref$1[0];\r\n        var y2 = ref$1[1];\r\n        var z2 = ref$1[2];\r\n        return new Color(\r\n            sqrt$2(pow$5(x1, 2) * (1 - f) + pow$5(x2, 2) * f),\r\n            sqrt$2(pow$5(y1, 2) * (1 - f) + pow$5(y2, 2) * f),\r\n            sqrt$2(pow$5(z1, 2) * (1 - f) + pow$5(z2, 2) * f),\r\n            'rgb'\r\n        );\r\n    };\r\n\r\n    // register interpolator\r\n    index.lrgb = lrgb;\r\n\r\n    var lab = function (col1, col2, f) {\r\n        var xyz0 = col1.lab();\r\n        var xyz1 = col2.lab();\r\n        return new Color(\r\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\r\n            'lab'\r\n        );\r\n    };\r\n\r\n    // register interpolator\r\n    index.lab = lab;\r\n\r\n    function interpolate_hsx (col1, col2, f, m) {\r\n        var assign, assign$1;\r\n\r\n        var xyz0, xyz1;\r\n        if (m === 'hsl') {\r\n            xyz0 = col1.hsl();\r\n            xyz1 = col2.hsl();\r\n        } else if (m === 'hsv') {\r\n            xyz0 = col1.hsv();\r\n            xyz1 = col2.hsv();\r\n        } else if (m === 'hcg') {\r\n            xyz0 = col1.hcg();\r\n            xyz1 = col2.hcg();\r\n        } else if (m === 'hsi') {\r\n            xyz0 = col1.hsi();\r\n            xyz1 = col2.hsi();\r\n        } else if (m === 'lch' || m === 'hcl') {\r\n            m = 'hcl';\r\n            xyz0 = col1.hcl();\r\n            xyz1 = col2.hcl();\r\n        } else if (m === 'oklch') {\r\n            xyz0 = col1.oklch().reverse();\r\n            xyz1 = col2.oklch().reverse();\r\n        }\r\n\r\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\r\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\r\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\r\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\r\n        }\r\n\r\n        var sat, hue, lbv, dh;\r\n\r\n        if (!isNaN(hue0) && !isNaN(hue1)) {\r\n            // both colors have hue\r\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\r\n                dh = hue1 - (hue0 + 360);\r\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\r\n                dh = hue1 + 360 - hue0;\r\n            } else {\r\n                dh = hue1 - hue0;\r\n            }\r\n            hue = hue0 + f * dh;\r\n        } else if (!isNaN(hue0)) {\r\n            hue = hue0;\r\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\r\n        } else if (!isNaN(hue1)) {\r\n            hue = hue1;\r\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\r\n        } else {\r\n            hue = Number.NaN;\r\n        }\r\n\r\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\r\n        lbv = lbv0 + f * (lbv1 - lbv0);\r\n        return m === 'oklch'\r\n            ? new Color([lbv, sat, hue], m)\r\n            : new Color([hue, sat, lbv], m);\r\n    }\r\n\r\n    var lch = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'lch');\r\n    };\r\n\r\n    // register interpolator\r\n    index.lch = lch;\r\n    index.hcl = lch;\r\n\r\n    var num = function (col1, col2, f) {\r\n        var c1 = col1.num();\r\n        var c2 = col2.num();\r\n        return new Color(c1 + f * (c2 - c1), 'num');\r\n    };\r\n\r\n    // register interpolator\r\n    index.num = num;\r\n\r\n    var hcg = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'hcg');\r\n    };\r\n\r\n    // register interpolator\r\n    index.hcg = hcg;\r\n\r\n    var hsi = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'hsi');\r\n    };\r\n\r\n    // register interpolator\r\n    index.hsi = hsi;\r\n\r\n    var hsl = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'hsl');\r\n    };\r\n\r\n    // register interpolator\r\n    index.hsl = hsl;\r\n\r\n    var hsv = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'hsv');\r\n    };\r\n\r\n    // register interpolator\r\n    index.hsv = hsv;\r\n\r\n    var oklab = function (col1, col2, f) {\r\n        var xyz0 = col1.oklab();\r\n        var xyz1 = col2.oklab();\r\n        return new Color(\r\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\r\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\r\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\r\n            'oklab'\r\n        );\r\n    };\r\n\r\n    // register interpolator\r\n    index.oklab = oklab;\r\n\r\n    var oklch = function (col1, col2, f) {\r\n        return interpolate_hsx(col1, col2, f, 'oklch');\r\n    };\r\n\r\n    // register interpolator\r\n    index.oklch = oklch;\r\n\r\n    var pow$4 = Math.pow;\r\n    var sqrt$1 = Math.sqrt;\r\n    var PI$1 = Math.PI;\r\n    var cos$2 = Math.cos;\r\n    var sin$2 = Math.sin;\r\n    var atan2$1 = Math.atan2;\r\n\r\n    function average (colors, mode, weights) {\r\n        if ( mode === void 0 ) mode = 'lrgb';\r\n        if ( weights === void 0 ) weights = null;\r\n\r\n        var l = colors.length;\r\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\r\n        // normalize weights\r\n        var k =\r\n            l /\r\n            weights.reduce(function (a, b) {\r\n                return a + b;\r\n            });\r\n        weights.forEach(function (w, i) {\r\n            weights[i] *= k;\r\n        });\r\n        // convert colors to Color objects\r\n        colors = colors.map(function (c) { return new Color(c); });\r\n        if (mode === 'lrgb') {\r\n            return _average_lrgb(colors, weights);\r\n        }\r\n        var first = colors.shift();\r\n        var xyz = first.get(mode);\r\n        var cnt = [];\r\n        var dx = 0;\r\n        var dy = 0;\r\n        // initial color\r\n        for (var i = 0; i < xyz.length; i++) {\r\n            xyz[i] = (xyz[i] || 0) * weights[0];\r\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\r\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\r\n                var A = (xyz[i] / 180) * PI$1;\r\n                dx += cos$2(A) * weights[0];\r\n                dy += sin$2(A) * weights[0];\r\n            }\r\n        }\r\n\r\n        var alpha = first.alpha() * weights[0];\r\n        colors.forEach(function (c, ci) {\r\n            var xyz2 = c.get(mode);\r\n            alpha += c.alpha() * weights[ci + 1];\r\n            for (var i = 0; i < xyz.length; i++) {\r\n                if (!isNaN(xyz2[i])) {\r\n                    cnt[i] += weights[ci + 1];\r\n                    if (mode.charAt(i) === 'h') {\r\n                        var A = (xyz2[i] / 180) * PI$1;\r\n                        dx += cos$2(A) * weights[ci + 1];\r\n                        dy += sin$2(A) * weights[ci + 1];\r\n                    } else {\r\n                        xyz[i] += xyz2[i] * weights[ci + 1];\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        for (var i$1 = 0; i$1 < xyz.length; i$1++) {\r\n            if (mode.charAt(i$1) === 'h') {\r\n                var A$1 = (atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1) * 180;\r\n                while (A$1 < 0) { A$1 += 360; }\r\n                while (A$1 >= 360) { A$1 -= 360; }\r\n                xyz[i$1] = A$1;\r\n            } else {\r\n                xyz[i$1] = xyz[i$1] / cnt[i$1];\r\n            }\r\n        }\r\n        alpha /= l;\r\n        return new Color(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true);\r\n    }\r\n    var _average_lrgb = function (colors, weights) {\r\n        var l = colors.length;\r\n        var xyz = [0, 0, 0, 0];\r\n        for (var i = 0; i < colors.length; i++) {\r\n            var col = colors[i];\r\n            var f = weights[i] / l;\r\n            var rgb = col._rgb;\r\n            xyz[0] += pow$4(rgb[0], 2) * f;\r\n            xyz[1] += pow$4(rgb[1], 2) * f;\r\n            xyz[2] += pow$4(rgb[2], 2) * f;\r\n            xyz[3] += rgb[3] * f;\r\n        }\r\n        xyz[0] = sqrt$1(xyz[0]);\r\n        xyz[1] = sqrt$1(xyz[1]);\r\n        xyz[2] = sqrt$1(xyz[2]);\r\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\r\n        return new Color(clip_rgb(xyz));\r\n    };\r\n\r\n    // minimal multi-purpose interface\r\n\r\n\r\n    var pow$3 = Math.pow;\r\n\r\n    function scale (colors) {\r\n        // constructor\r\n        var _mode = 'rgb';\r\n        var _nacol = chroma('#ccc');\r\n        var _spread = 0;\r\n        // const _fixed = false;\r\n        var _domain = [0, 1];\r\n        var _pos = [];\r\n        var _padding = [0, 0];\r\n        var _classes = false;\r\n        var _colors = [];\r\n        var _out = false;\r\n        var _min = 0;\r\n        var _max = 1;\r\n        var _correctLightness = false;\r\n        var _colorCache = {};\r\n        var _useCache = true;\r\n        var _gamma = 1;\r\n\r\n        // private methods\r\n\r\n        var setColors = function (colors) {\r\n            colors = colors || ['#fff', '#000'];\r\n            if (\r\n                colors &&\r\n                type(colors) === 'string' &&\r\n                chroma.brewer &&\r\n                chroma.brewer[colors.toLowerCase()]\r\n            ) {\r\n                colors = chroma.brewer[colors.toLowerCase()];\r\n            }\r\n            if (type(colors) === 'array') {\r\n                // handle single color\r\n                if (colors.length === 1) {\r\n                    colors = [colors[0], colors[0]];\r\n                }\r\n                // make a copy of the colors\r\n                colors = colors.slice(0);\r\n                // convert to chroma classes\r\n                for (var c = 0; c < colors.length; c++) {\r\n                    colors[c] = chroma(colors[c]);\r\n                }\r\n                // auto-fill color position\r\n                _pos.length = 0;\r\n                for (var c$1 = 0; c$1 < colors.length; c$1++) {\r\n                    _pos.push(c$1 / (colors.length - 1));\r\n                }\r\n            }\r\n            resetCache();\r\n            return (_colors = colors);\r\n        };\r\n\r\n        var getClass = function (value) {\r\n            if (_classes != null) {\r\n                var n = _classes.length - 1;\r\n                var i = 0;\r\n                while (i < n && value >= _classes[i]) {\r\n                    i++;\r\n                }\r\n                return i - 1;\r\n            }\r\n            return 0;\r\n        };\r\n\r\n        var tMapLightness = function (t) { return t; };\r\n        var tMapDomain = function (t) { return t; };\r\n\r\n        // const classifyValue = function(value) {\r\n        //     let val = value;\r\n        //     if (_classes.length > 2) {\r\n        //         const n = _classes.length-1;\r\n        //         const i = getClass(value);\r\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\r\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\r\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\r\n        //     }\r\n        //     return val;\r\n        // };\r\n\r\n        var getColor = function (val, bypassMap) {\r\n            var col, t;\r\n            if (bypassMap == null) {\r\n                bypassMap = false;\r\n            }\r\n            if (isNaN(val) || val === null) {\r\n                return _nacol;\r\n            }\r\n            if (!bypassMap) {\r\n                if (_classes && _classes.length > 2) {\r\n                    // find the class\r\n                    var c = getClass(val);\r\n                    t = c / (_classes.length - 2);\r\n                } else if (_max !== _min) {\r\n                    // just interpolate between min/max\r\n                    t = (val - _min) / (_max - _min);\r\n                } else {\r\n                    t = 1;\r\n                }\r\n            } else {\r\n                t = val;\r\n            }\r\n\r\n            // domain map\r\n            t = tMapDomain(t);\r\n\r\n            if (!bypassMap) {\r\n                t = tMapLightness(t); // lightness correction\r\n            }\r\n\r\n            if (_gamma !== 1) {\r\n                t = pow$3(t, _gamma);\r\n            }\r\n\r\n            t = _padding[0] + t * (1 - _padding[0] - _padding[1]);\r\n\r\n            t = limit(t, 0, 1);\r\n\r\n            var k = Math.floor(t * 10000);\r\n\r\n            if (_useCache && _colorCache[k]) {\r\n                col = _colorCache[k];\r\n            } else {\r\n                if (type(_colors) === 'array') {\r\n                    //for i in [0.._pos.length-1]\r\n                    for (var i = 0; i < _pos.length; i++) {\r\n                        var p = _pos[i];\r\n                        if (t <= p) {\r\n                            col = _colors[i];\r\n                            break;\r\n                        }\r\n                        if (t >= p && i === _pos.length - 1) {\r\n                            col = _colors[i];\r\n                            break;\r\n                        }\r\n                        if (t > p && t < _pos[i + 1]) {\r\n                            t = (t - p) / (_pos[i + 1] - p);\r\n                            col = chroma.interpolate(\r\n                                _colors[i],\r\n                                _colors[i + 1],\r\n                                t,\r\n                                _mode\r\n                            );\r\n                            break;\r\n                        }\r\n                    }\r\n                } else if (type(_colors) === 'function') {\r\n                    col = _colors(t);\r\n                }\r\n                if (_useCache) {\r\n                    _colorCache[k] = col;\r\n                }\r\n            }\r\n            return col;\r\n        };\r\n\r\n        var resetCache = function () { return (_colorCache = {}); };\r\n\r\n        setColors(colors);\r\n\r\n        // public interface\r\n\r\n        var f = function (v) {\r\n            var c = chroma(getColor(v));\r\n            if (_out && c[_out]) {\r\n                return c[_out]();\r\n            } else {\r\n                return c;\r\n            }\r\n        };\r\n\r\n        f.classes = function (classes) {\r\n            if (classes != null) {\r\n                if (type(classes) === 'array') {\r\n                    _classes = classes;\r\n                    _domain = [classes[0], classes[classes.length - 1]];\r\n                } else {\r\n                    var d = chroma.analyze(_domain);\r\n                    if (classes === 0) {\r\n                        _classes = [d.min, d.max];\r\n                    } else {\r\n                        _classes = chroma.limits(d, 'e', classes);\r\n                    }\r\n                }\r\n                return f;\r\n            }\r\n            return _classes;\r\n        };\r\n\r\n        f.domain = function (domain) {\r\n            if (!arguments.length) {\r\n                return _domain;\r\n            }\r\n            _min = domain[0];\r\n            _max = domain[domain.length - 1];\r\n            _pos = [];\r\n            var k = _colors.length;\r\n            if (domain.length === k && _min !== _max) {\r\n                // update positions\r\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\r\n                    var d = list[i];\r\n\r\n                    _pos.push((d - _min) / (_max - _min));\r\n                }\r\n            } else {\r\n                for (var c = 0; c < k; c++) {\r\n                    _pos.push(c / (k - 1));\r\n                }\r\n                if (domain.length > 2) {\r\n                    // set domain map\r\n                    var tOut = domain.map(function (d, i) { return i / (domain.length - 1); });\r\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\r\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\r\n                        tMapDomain = function (t) {\r\n                            if (t <= 0 || t >= 1) { return t; }\r\n                            var i = 0;\r\n                            while (t >= tBreaks[i + 1]) { i++; }\r\n                            var f =\r\n                                (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i]);\r\n                            var out = tOut[i] + f * (tOut[i + 1] - tOut[i]);\r\n                            return out;\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n            _domain = [_min, _max];\r\n            return f;\r\n        };\r\n\r\n        f.mode = function (_m) {\r\n            if (!arguments.length) {\r\n                return _mode;\r\n            }\r\n            _mode = _m;\r\n            resetCache();\r\n            return f;\r\n        };\r\n\r\n        f.range = function (colors, _pos) {\r\n            setColors(colors);\r\n            return f;\r\n        };\r\n\r\n        f.out = function (_o) {\r\n            _out = _o;\r\n            return f;\r\n        };\r\n\r\n        f.spread = function (val) {\r\n            if (!arguments.length) {\r\n                return _spread;\r\n            }\r\n            _spread = val;\r\n            return f;\r\n        };\r\n\r\n        f.correctLightness = function (v) {\r\n            if (v == null) {\r\n                v = true;\r\n            }\r\n            _correctLightness = v;\r\n            resetCache();\r\n            if (_correctLightness) {\r\n                tMapLightness = function (t) {\r\n                    var L0 = getColor(0, true).lab()[0];\r\n                    var L1 = getColor(1, true).lab()[0];\r\n                    var pol = L0 > L1;\r\n                    var L_actual = getColor(t, true).lab()[0];\r\n                    var L_ideal = L0 + (L1 - L0) * t;\r\n                    var L_diff = L_actual - L_ideal;\r\n                    var t0 = 0;\r\n                    var t1 = 1;\r\n                    var max_iter = 20;\r\n                    while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\r\n                        (function () {\r\n                            if (pol) {\r\n                                L_diff *= -1;\r\n                            }\r\n                            if (L_diff < 0) {\r\n                                t0 = t;\r\n                                t += (t1 - t) * 0.5;\r\n                            } else {\r\n                                t1 = t;\r\n                                t += (t0 - t) * 0.5;\r\n                            }\r\n                            L_actual = getColor(t, true).lab()[0];\r\n                            return (L_diff = L_actual - L_ideal);\r\n                        })();\r\n                    }\r\n                    return t;\r\n                };\r\n            } else {\r\n                tMapLightness = function (t) { return t; };\r\n            }\r\n            return f;\r\n        };\r\n\r\n        f.padding = function (p) {\r\n            if (p != null) {\r\n                if (type(p) === 'number') {\r\n                    p = [p, p];\r\n                }\r\n                _padding = p;\r\n                return f;\r\n            } else {\r\n                return _padding;\r\n            }\r\n        };\r\n\r\n        f.colors = function (numColors, out) {\r\n            // If no arguments are given, return the original colors that were provided\r\n            if (arguments.length < 2) {\r\n                out = 'hex';\r\n            }\r\n            var result = [];\r\n\r\n            if (arguments.length === 0) {\r\n                result = _colors.slice(0);\r\n            } else if (numColors === 1) {\r\n                result = [f(0.5)];\r\n            } else if (numColors > 1) {\r\n                var dm = _domain[0];\r\n                var dd = _domain[1] - dm;\r\n                result = __range__(0, numColors).map(function (i) { return f(dm + (i / (numColors - 1)) * dd); }\r\n                );\r\n            } else {\r\n                // returns all colors based on the defined classes\r\n                colors = [];\r\n                var samples = [];\r\n                if (_classes && _classes.length > 2) {\r\n                    for (\r\n                        var i = 1, end = _classes.length, asc = 1 <= end;\r\n                        asc ? i < end : i > end;\r\n                        asc ? i++ : i--\r\n                    ) {\r\n                        samples.push((_classes[i - 1] + _classes[i]) * 0.5);\r\n                    }\r\n                } else {\r\n                    samples = _domain;\r\n                }\r\n                result = samples.map(function (v) { return f(v); });\r\n            }\r\n\r\n            if (chroma[out]) {\r\n                result = result.map(function (c) { return c[out](); });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        f.cache = function (c) {\r\n            if (c != null) {\r\n                _useCache = c;\r\n                return f;\r\n            } else {\r\n                return _useCache;\r\n            }\r\n        };\r\n\r\n        f.gamma = function (g) {\r\n            if (g != null) {\r\n                _gamma = g;\r\n                return f;\r\n            } else {\r\n                return _gamma;\r\n            }\r\n        };\r\n\r\n        f.nodata = function (d) {\r\n            if (d != null) {\r\n                _nacol = chroma(d);\r\n                return f;\r\n            } else {\r\n                return _nacol;\r\n            }\r\n        };\r\n\r\n        return f;\r\n    }\r\n\r\n    function __range__(left, right, inclusive) {\r\n        var range = [];\r\n        var ascending = left < right;\r\n        var end = right ;\r\n        for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\r\n            range.push(i);\r\n        }\r\n        return range;\r\n    }\r\n\r\n    //\r\n    // interpolates between a set of colors uzing a bezier spline\r\n    //\r\n\r\n\r\n    // nth row of the pascal triangle\r\n    var binom_row = function (n) {\r\n        var row = [1, 1];\r\n        for (var i = 1; i < n; i++) {\r\n            var newrow = [1];\r\n            for (var j = 1; j <= row.length; j++) {\r\n                newrow[j] = (row[j] || 0) + row[j - 1];\r\n            }\r\n            row = newrow;\r\n        }\r\n        return row;\r\n    };\r\n\r\n    var bezier = function (colors) {\r\n        var assign, assign$1, assign$2;\r\n\r\n        var I, lab0, lab1, lab2;\r\n        colors = colors.map(function (c) { return new Color(c); });\r\n        if (colors.length === 2) {\r\n            // linear interpolation\r\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\r\n            I = function (t) {\r\n                var lab = [0, 1, 2].map(function (i) { return lab0[i] + t * (lab1[i] - lab0[i]); });\r\n                return new Color(lab, 'lab');\r\n            };\r\n        } else if (colors.length === 3) {\r\n            // quadratic bezier interpolation\r\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\r\n            I = function (t) {\r\n                var lab = [0, 1, 2].map(\r\n                    function (i) { return (1 - t) * (1 - t) * lab0[i] +\r\n                        2 * (1 - t) * t * lab1[i] +\r\n                        t * t * lab2[i]; }\r\n                );\r\n                return new Color(lab, 'lab');\r\n            };\r\n        } else if (colors.length === 4) {\r\n            // cubic bezier interpolation\r\n            var lab3;\r\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\r\n            I = function (t) {\r\n                var lab = [0, 1, 2].map(\r\n                    function (i) { return (1 - t) * (1 - t) * (1 - t) * lab0[i] +\r\n                        3 * (1 - t) * (1 - t) * t * lab1[i] +\r\n                        3 * (1 - t) * t * t * lab2[i] +\r\n                        t * t * t * lab3[i]; }\r\n                );\r\n                return new Color(lab, 'lab');\r\n            };\r\n        } else if (colors.length >= 5) {\r\n            // general case (degree n bezier)\r\n            var labs, row, n;\r\n            labs = colors.map(function (c) { return c.lab(); });\r\n            n = colors.length - 1;\r\n            row = binom_row(n);\r\n            I = function (t) {\r\n                var u = 1 - t;\r\n                var lab = [0, 1, 2].map(function (i) { return labs.reduce(\r\n                        function (sum, el, j) { return sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]; },\r\n                        0\r\n                    ); }\r\n                );\r\n                return new Color(lab, 'lab');\r\n            };\r\n        } else {\r\n            throw new RangeError('No point in running bezier with only one color.');\r\n        }\r\n        return I;\r\n    };\r\n\r\n    function bezier$1 (colors) {\r\n        var f = bezier(colors);\r\n        f.scale = function () { return scale(f); };\r\n        return f;\r\n    }\r\n\r\n    /*\r\n     * interpolates between a set of colors uzing a bezier spline\r\n     * blend mode formulas taken from https://web.archive.org/web/20180110014946/http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\r\n     */\r\n\r\n\r\n    var blend = function (bottom, top, mode) {\r\n        if (!blend[mode]) {\r\n            throw new Error('unknown blend mode ' + mode);\r\n        }\r\n        return blend[mode](bottom, top);\r\n    };\r\n\r\n    var blend_f = function (f) { return function (bottom, top) {\r\n        var c0 = chroma(top).rgb();\r\n        var c1 = chroma(bottom).rgb();\r\n        return chroma.rgb(f(c0, c1));\r\n    }; };\r\n\r\n    var each = function (f) { return function (c0, c1) {\r\n        var out = [];\r\n        out[0] = f(c0[0], c1[0]);\r\n        out[1] = f(c0[1], c1[1]);\r\n        out[2] = f(c0[2], c1[2]);\r\n        return out;\r\n    }; };\r\n\r\n    var normal = function (a) { return a; };\r\n    var multiply = function (a, b) { return (a * b) / 255; };\r\n    var darken = function (a, b) { return (a > b ? b : a); };\r\n    var lighten = function (a, b) { return (a > b ? a : b); };\r\n    var screen = function (a, b) { return 255 * (1 - (1 - a / 255) * (1 - b / 255)); };\r\n    var overlay = function (a, b) { return b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255)); };\r\n    var burn = function (a, b) { return 255 * (1 - (1 - b / 255) / (a / 255)); };\r\n    var dodge = function (a, b) {\r\n        if (a === 255) { return 255; }\r\n        a = (255 * (b / 255)) / (1 - a / 255);\r\n        return a > 255 ? 255 : a;\r\n    };\r\n\r\n    // # add = (a,b) ->\r\n    // #     if (a + b > 255) then 255 else a + b\r\n\r\n    blend.normal = blend_f(each(normal));\r\n    blend.multiply = blend_f(each(multiply));\r\n    blend.screen = blend_f(each(screen));\r\n    blend.overlay = blend_f(each(overlay));\r\n    blend.darken = blend_f(each(darken));\r\n    blend.lighten = blend_f(each(lighten));\r\n    blend.dodge = blend_f(each(dodge));\r\n    blend.burn = blend_f(each(burn));\r\n\r\n    // cubehelix interpolation\r\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\r\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\r\n    var pow$2 = Math.pow;\r\n    var sin$1 = Math.sin;\r\n    var cos$1 = Math.cos;\r\n\r\n    function cubehelix (\r\n        start,\r\n        rotations,\r\n        hue,\r\n        gamma,\r\n        lightness\r\n    ) {\r\n        if ( start === void 0 ) start = 300;\r\n        if ( rotations === void 0 ) rotations = -1.5;\r\n        if ( hue === void 0 ) hue = 1;\r\n        if ( gamma === void 0 ) gamma = 1;\r\n        if ( lightness === void 0 ) lightness = [0, 1];\r\n\r\n        var dh = 0,\r\n            dl;\r\n        if (type(lightness) === 'array') {\r\n            dl = lightness[1] - lightness[0];\r\n        } else {\r\n            dl = 0;\r\n            lightness = [lightness, lightness];\r\n        }\r\n        var f = function (fract) {\r\n            var a = TWOPI * ((start + 120) / 360 + rotations * fract);\r\n            var l = pow$2(lightness[0] + dl * fract, gamma);\r\n            var h = dh !== 0 ? hue[0] + fract * dh : hue;\r\n            var amp = (h * l * (1 - l)) / 2;\r\n            var cos_a = cos$1(a);\r\n            var sin_a = sin$1(a);\r\n            var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a);\r\n            var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a);\r\n            var b = l + amp * (+1.97294 * cos_a);\r\n            return chroma(clip_rgb([r * 255, g * 255, b * 255, 1]));\r\n        };\r\n        f.start = function (s) {\r\n            if (s == null) {\r\n                return start;\r\n            }\r\n            start = s;\r\n            return f;\r\n        };\r\n        f.rotations = function (r) {\r\n            if (r == null) {\r\n                return rotations;\r\n            }\r\n            rotations = r;\r\n            return f;\r\n        };\r\n        f.gamma = function (g) {\r\n            if (g == null) {\r\n                return gamma;\r\n            }\r\n            gamma = g;\r\n            return f;\r\n        };\r\n        f.hue = function (h) {\r\n            if (h == null) {\r\n                return hue;\r\n            }\r\n            hue = h;\r\n            if (type(hue) === 'array') {\r\n                dh = hue[1] - hue[0];\r\n                if (dh === 0) {\r\n                    hue = hue[1];\r\n                }\r\n            } else {\r\n                dh = 0;\r\n            }\r\n            return f;\r\n        };\r\n        f.lightness = function (h) {\r\n            if (h == null) {\r\n                return lightness;\r\n            }\r\n            if (type(h) === 'array') {\r\n                lightness = h;\r\n                dl = h[1] - h[0];\r\n            } else {\r\n                lightness = [h, h];\r\n                dl = 0;\r\n            }\r\n            return f;\r\n        };\r\n        f.scale = function () { return chroma.scale(f); };\r\n        f.hue(hue);\r\n        return f;\r\n    }\r\n\r\n    var digits = '0123456789abcdef';\r\n\r\n    var floor$1 = Math.floor;\r\n    var random = Math.random;\r\n\r\n    function random$1 () {\r\n        var code = '#';\r\n        for (var i = 0; i < 6; i++) {\r\n            code += digits.charAt(floor$1(random() * 16));\r\n        }\r\n        return new Color(code, 'hex');\r\n    }\r\n\r\n    var log = Math.log;\r\n    var pow$1 = Math.pow;\r\n    var floor = Math.floor;\r\n    var abs$1 = Math.abs;\r\n\r\n    function analyze(data, key) {\r\n        if ( key === void 0 ) key = null;\r\n\r\n        var r = {\r\n            min: Number.MAX_VALUE,\r\n            max: Number.MAX_VALUE * -1,\r\n            sum: 0,\r\n            values: [],\r\n            count: 0\r\n        };\r\n        if (type(data) === 'object') {\r\n            data = Object.values(data);\r\n        }\r\n        data.forEach(function (val) {\r\n            if (key && type(val) === 'object') { val = val[key]; }\r\n            if (val !== undefined && val !== null && !isNaN(val)) {\r\n                r.values.push(val);\r\n                r.sum += val;\r\n                if (val < r.min) { r.min = val; }\r\n                if (val > r.max) { r.max = val; }\r\n                r.count += 1;\r\n            }\r\n        });\r\n\r\n        r.domain = [r.min, r.max];\r\n\r\n        r.limits = function (mode, num) { return limits(r, mode, num); };\r\n\r\n        return r;\r\n    }\r\n\r\n    function limits(data, mode, num) {\r\n        if ( mode === void 0 ) mode = 'equal';\r\n        if ( num === void 0 ) num = 7;\r\n\r\n        if (type(data) == 'array') {\r\n            data = analyze(data);\r\n        }\r\n        var min = data.min;\r\n        var max = data.max;\r\n        var values = data.values.sort(function (a, b) { return a - b; });\r\n\r\n        if (num === 1) {\r\n            return [min, max];\r\n        }\r\n\r\n        var limits = [];\r\n\r\n        if (mode.substr(0, 1) === 'c') {\r\n            // continuous\r\n            limits.push(min);\r\n            limits.push(max);\r\n        }\r\n\r\n        if (mode.substr(0, 1) === 'e') {\r\n            // equal interval\r\n            limits.push(min);\r\n            for (var i = 1; i < num; i++) {\r\n                limits.push(min + (i / num) * (max - min));\r\n            }\r\n            limits.push(max);\r\n        } else if (mode.substr(0, 1) === 'l') {\r\n            // log scale\r\n            if (min <= 0) {\r\n                throw new Error(\r\n                    'Logarithmic scales are only possible for values > 0'\r\n                );\r\n            }\r\n            var min_log = Math.LOG10E * log(min);\r\n            var max_log = Math.LOG10E * log(max);\r\n            limits.push(min);\r\n            for (var i$1 = 1; i$1 < num; i$1++) {\r\n                limits.push(pow$1(10, min_log + (i$1 / num) * (max_log - min_log)));\r\n            }\r\n            limits.push(max);\r\n        } else if (mode.substr(0, 1) === 'q') {\r\n            // quantile scale\r\n            limits.push(min);\r\n            for (var i$2 = 1; i$2 < num; i$2++) {\r\n                var p = ((values.length - 1) * i$2) / num;\r\n                var pb = floor(p);\r\n                if (pb === p) {\r\n                    limits.push(values[pb]);\r\n                } else {\r\n                    // p > pb\r\n                    var pr = p - pb;\r\n                    limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr);\r\n                }\r\n            }\r\n            limits.push(max);\r\n        } else if (mode.substr(0, 1) === 'k') {\r\n            // k-means clustering\r\n            /*\r\n            implementation based on\r\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\r\n            simplified for 1-d input values\r\n            */\r\n            var cluster;\r\n            var n = values.length;\r\n            var assignments = new Array(n);\r\n            var clusterSizes = new Array(num);\r\n            var repeat = true;\r\n            var nb_iters = 0;\r\n            var centroids = null;\r\n\r\n            // get seed values\r\n            centroids = [];\r\n            centroids.push(min);\r\n            for (var i$3 = 1; i$3 < num; i$3++) {\r\n                centroids.push(min + (i$3 / num) * (max - min));\r\n            }\r\n            centroids.push(max);\r\n\r\n            while (repeat) {\r\n                // assignment step\r\n                for (var j = 0; j < num; j++) {\r\n                    clusterSizes[j] = 0;\r\n                }\r\n                for (var i$4 = 0; i$4 < n; i$4++) {\r\n                    var value = values[i$4];\r\n                    var mindist = Number.MAX_VALUE;\r\n                    var best = (void 0);\r\n                    for (var j$1 = 0; j$1 < num; j$1++) {\r\n                        var dist = abs$1(centroids[j$1] - value);\r\n                        if (dist < mindist) {\r\n                            mindist = dist;\r\n                            best = j$1;\r\n                        }\r\n                        clusterSizes[best]++;\r\n                        assignments[i$4] = best;\r\n                    }\r\n                }\r\n\r\n                // update centroids step\r\n                var newCentroids = new Array(num);\r\n                for (var j$2 = 0; j$2 < num; j$2++) {\r\n                    newCentroids[j$2] = null;\r\n                }\r\n                for (var i$5 = 0; i$5 < n; i$5++) {\r\n                    cluster = assignments[i$5];\r\n                    if (newCentroids[cluster] === null) {\r\n                        newCentroids[cluster] = values[i$5];\r\n                    } else {\r\n                        newCentroids[cluster] += values[i$5];\r\n                    }\r\n                }\r\n                for (var j$3 = 0; j$3 < num; j$3++) {\r\n                    newCentroids[j$3] *= 1 / clusterSizes[j$3];\r\n                }\r\n\r\n                // check convergence\r\n                repeat = false;\r\n                for (var j$4 = 0; j$4 < num; j$4++) {\r\n                    if (newCentroids[j$4] !== centroids[j$4]) {\r\n                        repeat = true;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                centroids = newCentroids;\r\n                nb_iters++;\r\n\r\n                if (nb_iters > 200) {\r\n                    repeat = false;\r\n                }\r\n            }\r\n\r\n            // finished k-means clustering\r\n            // the next part is borrowed from gabrielflor.it\r\n            var kClusters = {};\r\n            for (var j$5 = 0; j$5 < num; j$5++) {\r\n                kClusters[j$5] = [];\r\n            }\r\n            for (var i$6 = 0; i$6 < n; i$6++) {\r\n                cluster = assignments[i$6];\r\n                kClusters[cluster].push(values[i$6]);\r\n            }\r\n            var tmpKMeansBreaks = [];\r\n            for (var j$6 = 0; j$6 < num; j$6++) {\r\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\r\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1]);\r\n            }\r\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) { return a - b; });\r\n            limits.push(tmpKMeansBreaks[0]);\r\n            for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {\r\n                var v = tmpKMeansBreaks[i$7];\r\n                if (!isNaN(v) && limits.indexOf(v) === -1) {\r\n                    limits.push(v);\r\n                }\r\n            }\r\n        }\r\n        return limits;\r\n    }\r\n\r\n    function contrast (a, b) {\r\n        // WCAG contrast ratio\r\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\r\n        a = new Color(a);\r\n        b = new Color(b);\r\n        var l1 = a.luminance();\r\n        var l2 = b.luminance();\r\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\r\n    }\r\n\r\n    var sqrt = Math.sqrt;\r\n    var pow = Math.pow;\r\n    var min = Math.min;\r\n    var max = Math.max;\r\n    var atan2 = Math.atan2;\r\n    var abs = Math.abs;\r\n    var cos = Math.cos;\r\n    var sin = Math.sin;\r\n    var exp = Math.exp;\r\n    var PI = Math.PI;\r\n\r\n    function deltaE (a, b, Kl, Kc, Kh) {\r\n        if ( Kl === void 0 ) Kl = 1;\r\n        if ( Kc === void 0 ) Kc = 1;\r\n        if ( Kh === void 0 ) Kh = 1;\r\n\r\n        // Delta E (CIE 2000)\r\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\r\n        var rad2deg = function (rad) {\r\n            return (360 * rad) / (2 * PI);\r\n        };\r\n        var deg2rad = function (deg) {\r\n            return (2 * PI * deg) / 360;\r\n        };\r\n        a = new Color(a);\r\n        b = new Color(b);\r\n        var ref = Array.from(a.lab());\r\n        var L1 = ref[0];\r\n        var a1 = ref[1];\r\n        var b1 = ref[2];\r\n        var ref$1 = Array.from(b.lab());\r\n        var L2 = ref$1[0];\r\n        var a2 = ref$1[1];\r\n        var b2 = ref$1[2];\r\n        var avgL = (L1 + L2) / 2;\r\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\r\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\r\n        var avgC = (C1 + C2) / 2;\r\n        var G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))));\r\n        var a1p = a1 * (1 + G);\r\n        var a2p = a2 * (1 + G);\r\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\r\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\r\n        var avgCp = (C1p + C2p) / 2;\r\n        var arctan1 = rad2deg(atan2(b1, a1p));\r\n        var arctan2 = rad2deg(atan2(b2, a2p));\r\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\r\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\r\n        var avgHp =\r\n            abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2;\r\n        var T =\r\n            1 -\r\n            0.17 * cos(deg2rad(avgHp - 30)) +\r\n            0.24 * cos(deg2rad(2 * avgHp)) +\r\n            0.32 * cos(deg2rad(3 * avgHp + 6)) -\r\n            0.2 * cos(deg2rad(4 * avgHp - 63));\r\n        var deltaHp = h2p - h1p;\r\n        deltaHp =\r\n            abs(deltaHp) <= 180\r\n                ? deltaHp\r\n                : h2p <= h1p\r\n                  ? deltaHp + 360\r\n                  : deltaHp - 360;\r\n        deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2);\r\n        var deltaL = L2 - L1;\r\n        var deltaCp = C2p - C1p;\r\n        var sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2));\r\n        var sc = 1 + 0.045 * avgCp;\r\n        var sh = 1 + 0.015 * avgCp * T;\r\n        var deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2));\r\n        var Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)));\r\n        var Rt = -Rc * sin(2 * deg2rad(deltaTheta));\r\n        var result = sqrt(\r\n            pow(deltaL / (Kl * sl), 2) +\r\n                pow(deltaCp / (Kc * sc), 2) +\r\n                pow(deltaHp / (Kh * sh), 2) +\r\n                Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh))\r\n        );\r\n        return max(0, min(100, result));\r\n    }\r\n\r\n    // simple Euclidean distance\r\n    function distance (a, b, mode) {\r\n        if ( mode === void 0 ) mode = 'lab';\r\n\r\n        // Delta E (CIE 1976)\r\n        // see http://www.brucelindbloom.com/index.html?Equations.html\r\n        a = new Color(a);\r\n        b = new Color(b);\r\n        var l1 = a.get(mode);\r\n        var l2 = b.get(mode);\r\n        var sum_sq = 0;\r\n        for (var i in l1) {\r\n            var d = (l1[i] || 0) - (l2[i] || 0);\r\n            sum_sq += d * d;\r\n        }\r\n        return Math.sqrt(sum_sq);\r\n    }\r\n\r\n    function valid () {\r\n        var args = [], len = arguments.length;\r\n        while ( len-- ) args[ len ] = arguments[ len ];\r\n\r\n        try {\r\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\r\n            return true;\r\n            // eslint-disable-next-line\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // some pre-defined color scales:\r\n\r\n    var scales = {\r\n        cool: function cool() {\r\n            return scale([chroma.hsl(180, 1, 0.9), chroma.hsl(250, 0.7, 0.4)]);\r\n        },\r\n        hot: function hot() {\r\n            return scale(['#000', '#f00', '#ff0', '#fff']).mode(\r\n                'rgb'\r\n            );\r\n        }\r\n    };\r\n\r\n    /**\r\n        ColorBrewer colors for chroma.js\r\n\r\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\r\n        Pennsylvania State University.\r\n\r\n        Licensed under the Apache License, Version 2.0 (the \"License\");\r\n        you may not use this file except in compliance with the License.\r\n        You may obtain a copy of the License at\r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n        Unless required by applicable law or agreed to in writing, software distributed\r\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\r\n        specific language governing permissions and limitations under the License.\r\n    */\r\n\r\n    var colorbrewer = {\r\n        // sequential\r\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\r\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\r\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\r\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\r\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\r\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\r\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\r\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\r\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\r\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\r\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\r\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\r\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\r\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\r\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\r\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\r\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\r\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\r\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\r\n\r\n        // diverging\r\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\r\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\r\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\r\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\r\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\r\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\r\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\r\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\r\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\r\n\r\n        // qualitative\r\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\r\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\r\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\r\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\r\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\r\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\r\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\r\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\r\n    };\r\n\r\n    // add lowercase aliases for case-insensitive matches\r\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\r\n        var key = list[i];\r\n\r\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\r\n    }\r\n\r\n    Object.assign(chroma, {\r\n        average: average,\r\n        bezier: bezier$1,\r\n        blend: blend,\r\n        cubehelix: cubehelix,\r\n        mix: mix,\r\n        interpolate: mix,\r\n        random: random$1,\r\n        scale: scale,\r\n        analyze: analyze,\r\n        contrast: contrast,\r\n        deltaE: deltaE,\r\n        distance: distance,\r\n        limits: limits,\r\n        valid: valid,\r\n        scales: scales,\r\n        input: input,\r\n        colors: w3cx11,\r\n        brewer: colorbrewer\r\n    });\r\n\r\n    return chroma;\r\n\r\n}));\r\n", "'use strict'\r\n\r\n/**\r\n * Font RegExp helpers.\r\n */\r\n\r\nconst weights = 'bold|bolder|lighter|[1-9]00'\r\nconst styles = 'italic|oblique'\r\nconst variants = 'small-caps'\r\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\r\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\r\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\r\n\r\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\r\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\r\n// https://drafts.csswg.org/css-fonts-3/#font-prop\r\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\r\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\r\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\r\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\r\nconst sizeFamilyRe = new RegExp(\r\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\r\n\r\n/**\r\n * Cache font parsing.\r\n */\r\n\r\nconst cache = {}\r\n\r\nconst defaultHeight = 16 // pt, common browser default\r\n\r\n/**\r\n * Parse font `str`.\r\n *\r\n * @param {String} str\r\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\r\n *   appearing in the input string.\r\n * @api private\r\n */\r\n\r\nmodule.exports = str => {\r\n  // Cached\r\n  if (cache[str]) return cache[str]\r\n\r\n  // Try for required properties first.\r\n  const sizeFamily = sizeFamilyRe.exec(str)\r\n  if (!sizeFamily) return // invalid\r\n\r\n  // Default values and required properties\r\n  const font = {\r\n    weight: 'normal',\r\n    style: 'normal',\r\n    stretch: 'normal',\r\n    variant: 'normal',\r\n    size: parseFloat(sizeFamily[1]),\r\n    unit: sizeFamily[2],\r\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\r\n  }\r\n\r\n  // Optional, unordered properties.\r\n  let weight, style, variant, stretch\r\n  // Stop search at `sizeFamily.index`\r\n  const substr = str.substring(0, sizeFamily.index)\r\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\r\n  if ((style = styleRe.exec(substr))) font.style = style[1]\r\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\r\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\r\n\r\n  // Convert to device units. (`font.unit` is the original unit)\r\n  // TODO: ch, ex\r\n  switch (font.unit) {\r\n    case 'pt':\r\n      font.size /= 0.75\r\n      break\r\n    case 'pc':\r\n      font.size *= 16\r\n      break\r\n    case 'in':\r\n      font.size *= 96\r\n      break\r\n    case 'cm':\r\n      font.size *= 96.0 / 2.54\r\n      break\r\n    case 'mm':\r\n      font.size *= 96.0 / 25.4\r\n      break\r\n    case '%':\r\n      // TODO disabled because existing unit tests assume 100\r\n      // font.size *= defaultHeight / 100 / 0.75\r\n      break\r\n    case 'em':\r\n    case 'rem':\r\n      font.size *= defaultHeight / 0.75\r\n      break\r\n    case 'q':\r\n      font.size *= 96 / 25.4 / 4\r\n      break\r\n  }\r\n\r\n  return (cache[str] = font)\r\n}\r\n", "/* globals document, ImageData */\r\n\r\nconst parseFont = require('./lib/parse-font')\r\n\r\nexports.parseFont = parseFont\r\n\r\nexports.createCanvas = function (width, height) {\r\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\r\n}\r\n\r\nexports.createImageData = function (array, width, height) {\r\n  // Browser implementation of ImageData looks at the number of arguments passed\r\n  switch (arguments.length) {\r\n    case 0: return new ImageData()\r\n    case 1: return new ImageData(array)\r\n    case 2: return new ImageData(array, width)\r\n    default: return new ImageData(array, width, height)\r\n  }\r\n}\r\n\r\nexports.loadImage = function (src, options) {\r\n  return new Promise(function (resolve, reject) {\r\n    const image = Object.assign(document.createElement('img'), options)\r\n\r\n    function cleanup () {\r\n      image.onload = null\r\n      image.onerror = null\r\n    }\r\n\r\n    image.onload = function () { cleanup(); resolve(image) }\r\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\r\n\r\n    image.src = src\r\n  })\r\n}\r\n", "'use strict';\r\n\r\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\r\n\r\nvar Delaunator = _interopDefault(require('delaunator'));\r\nvar chroma = _interopDefault(require('chroma-js'));\r\nvar canvas = require('canvas');\r\n\r\n/*\r\n * colorbrewer.js\r\n *\r\n * Colorbrewer colors, by Cindy Brewer\r\n */\r\nvar colorbrewer = {\r\n  YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\r\n  YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\r\n  GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\r\n  BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\r\n  PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\r\n  PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\r\n  BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\r\n  RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\r\n  PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\r\n  OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\r\n  YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\r\n  YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\r\n  Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\r\n  Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\r\n  Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\r\n  Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\r\n  Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\r\n  Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\r\n  PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\r\n  BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\r\n  PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\r\n  PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\r\n  RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\r\n  RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\r\n  RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\r\n  Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\r\n  RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837']\r\n};\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction getScalingRatio (ctx) {\r\n  // adapted from https://gist.github.com/callumlocke/cc258a193839691f60dd\r\n  const backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\r\n  const devicePixelRatio = typeof window !== 'undefined' && window.devicePixelRatio || 1;\r\n  const drawRatio = devicePixelRatio / backingStoreRatio;\r\n  return drawRatio;\r\n}\r\n\r\nconst isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\r\nconst doc = isBrowser && document; // utility for building up SVG node trees with the DOM API\r\n\r\nconst sDOM = (tagName, attrs = {}, children, existingRoot) => {\r\n  const elem = existingRoot || doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n  Object.keys(attrs).forEach(k => attrs[k] !== undefined && elem.setAttribute(k, attrs[k]));\r\n  children && children.forEach(c => elem.appendChild(c));\r\n  return elem;\r\n}; // serialize attrs object to XML attributes. Assumes everything is already\r\n// escaped (safe input).\r\n\r\n\r\nconst serializeAttrs = attrs => Object.entries(attrs).filter(([_, v]) => v !== undefined).map(([k, v]) => `${k}='${v}'`).join(' '); // minimal XML-tree builder for use in Node\r\n\r\n\r\nconst sNode = (tagName, attrs = {}, children) => ({\r\n  tagName,\r\n  attrs,\r\n  children,\r\n  toString: () => `<${tagName} ${serializeAttrs(attrs)}>${children ? children.join('') : ''}</${tagName}>`\r\n});\r\n\r\nclass Pattern {\r\n  constructor(_points, _polys, _opts) {\r\n    _defineProperty(this, \"_toSVG\", (serializer, destSVG, _svgOpts = {}) => {\r\n      const s = serializer;\r\n      const defaultSVGOptions = {\r\n        includeNamespace: true,\r\n        coordinateDecimals: 1\r\n      };\r\n      const svgOpts = { ...defaultSVGOptions,\r\n        ..._svgOpts\r\n      };\r\n      const {\r\n        points,\r\n        opts,\r\n        polys\r\n      } = this;\r\n      const {\r\n        width,\r\n        height\r\n      } = opts; // only round points if the coordinateDecimals option is non-negative\r\n      // set coordinateDecimals to -1 to disable point rounding\r\n\r\n      const roundedPoints = svgOpts.coordinateDecimals < 0 ? points : points.map(p => p.map(x => +x.toFixed(svgOpts.coordinateDecimals)));\r\n      const paths = polys.map(poly => {\r\n        const xys = poly.vertexIndices.map(i => `${roundedPoints[i][0]},${roundedPoints[i][1]}`);\r\n        const d = 'M' + xys.join('L') + 'Z';\r\n        const hasStroke = opts.strokeWidth > 0; // shape-rendering crispEdges resolves the antialiasing issues, at the\r\n        // potential cost of some visual degradation. For the best performance\r\n        // *and* best visual rendering, use Canvas.\r\n\r\n        return s('path', {\r\n          d,\r\n          fill: opts.fill ? poly.color.css() : undefined,\r\n          stroke: hasStroke ? poly.color.css() : undefined,\r\n          'stroke-width': hasStroke ? opts.strokeWidth : undefined,\r\n          'stroke-linejoin': hasStroke ? 'round' : undefined,\r\n          'shape-rendering': opts.fill ? 'crispEdges' : undefined\r\n        });\r\n      });\r\n      const svg = s('svg', {\r\n        xmlns: svgOpts.includeNamespace ? 'http://www.w3.org/2000/svg' : undefined,\r\n        width,\r\n        height\r\n      }, paths, destSVG);\r\n      return svg;\r\n    });\r\n\r\n    _defineProperty(this, \"toSVGTree\", svgOpts => this._toSVG(sNode, null, svgOpts));\r\n\r\n    _defineProperty(this, \"toSVG\", isBrowser ? (destSVG, svgOpts) => this._toSVG(sDOM, destSVG, svgOpts) : (destSVG, svgOpts) => this.toSVGTree(svgOpts));\r\n\r\n    _defineProperty(this, \"toCanvas\", (destCanvas, _canvasOpts = {}) => {\r\n      const defaultCanvasOptions = {\r\n        scaling: isBrowser ? 'auto' : false,\r\n        applyCssScaling: !!isBrowser\r\n      };\r\n      const canvasOpts = { ...defaultCanvasOptions,\r\n        ..._canvasOpts\r\n      };\r\n      const {\r\n        points,\r\n        polys,\r\n        opts\r\n      } = this;\r\n      const canvas$1 = destCanvas || canvas.createCanvas(opts.width, opts.height); // doc.createElement('canvas')\r\n\r\n      const ctx = canvas$1.getContext('2d');\r\n\r\n      if (canvasOpts.scaling) {\r\n        const drawRatio = canvasOpts.scaling === 'auto' ? getScalingRatio(ctx) : canvasOpts.scaling;\r\n\r\n        if (drawRatio !== 1) {\r\n          // set the 'real' canvas size to the higher width/height\r\n          canvas$1.width = opts.width * drawRatio;\r\n          canvas$1.height = opts.height * drawRatio;\r\n\r\n          if (canvasOpts.applyCssScaling) {\r\n            // ...then scale it back down with CSS\r\n            canvas$1.style.width = opts.width + 'px';\r\n            canvas$1.style.height = opts.height + 'px';\r\n          }\r\n        } else {\r\n          // this is a normal 1:1 device: don't apply scaling\r\n          canvas$1.width = opts.width;\r\n          canvas$1.height = opts.height;\r\n\r\n          if (canvasOpts.applyCssScaling) {\r\n            canvas$1.style.width = '';\r\n            canvas$1.style.height = '';\r\n          }\r\n        }\r\n\r\n        ctx.scale(drawRatio, drawRatio);\r\n      }\r\n\r\n      const drawPoly = (poly, fill, stroke) => {\r\n        const vertexIndices = poly.vertexIndices;\r\n        ctx.lineJoin = 'round';\r\n        ctx.beginPath();\r\n        ctx.moveTo(points[vertexIndices[0]][0], points[vertexIndices[0]][1]);\r\n        ctx.lineTo(points[vertexIndices[1]][0], points[vertexIndices[1]][1]);\r\n        ctx.lineTo(points[vertexIndices[2]][0], points[vertexIndices[2]][1]);\r\n        ctx.closePath();\r\n\r\n        if (fill) {\r\n          ctx.fillStyle = fill.color.css();\r\n          ctx.fill();\r\n        }\r\n\r\n        if (stroke) {\r\n          ctx.strokeStyle = stroke.color.css();\r\n          ctx.lineWidth = stroke.width;\r\n          ctx.stroke();\r\n        }\r\n      };\r\n\r\n      if (opts.fill && opts.strokeWidth < 1) {\r\n        // draw background strokes at edge bounds to solve for white gaps due to\r\n        // canvas antialiasing. See https://stackoverflow.com/q/19319963/381299\r\n        polys.forEach(poly => drawPoly(poly, null, {\r\n          color: poly.color,\r\n          width: 2\r\n        }));\r\n      } // draw visible fills and strokes\r\n\r\n\r\n      polys.forEach(poly => drawPoly(poly, opts.fill && {\r\n        color: poly.color\r\n      }, opts.strokeWidth > 0 && {\r\n        color: poly.color,\r\n        width: opts.strokeWidth\r\n      }));\r\n      return canvas$1;\r\n    });\r\n\r\n    this.points = _points;\r\n    this.polys = _polys;\r\n    this.opts = _opts;\r\n  }\r\n\r\n}\r\n\r\n// Fast seeded RNG adapted from the public-domain implementation\r\n// by @byrc: https://github.com/bryc/code/blob/master/jshash/PRNGs.md\r\n//\r\n// Usage:\r\n// const randFn = mulberry32('string seed')\r\n// const randomNumber = randFn() // [0, 1] random float\r\nfunction mulberry32(seed) {\r\n  if (!seed) {\r\n    seed = Math.random().toString(36);\r\n  } // support no-seed usage\r\n\r\n\r\n  var a = xmur3(seed)();\r\n  return function () {\r\n    a |= 0;\r\n    a = a + 0x6D2B79F5 | 0;\r\n    var t = Math.imul(a ^ a >>> 15, 1 | a);\r\n    t = t + Math.imul(t ^ t >>> 7, 61 | t) ^ t;\r\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\r\n  };\r\n}\r\n\r\nfunction xmur3(str) {\r\n  for (var i = 0, h = 1779033703 ^ str.length; i < str.length; i++) {\r\n    h = Math.imul(h ^ str.charCodeAt(i), 3432918353);\r\n    h = h << 13 | h >>> 19;\r\n  }\r\n\r\n  return function () {\r\n    h = Math.imul(h ^ h >>> 16, 2246822507);\r\n    h = Math.imul(h ^ h >>> 13, 3266489909);\r\n    return (h ^= h >>> 16) >>> 0;\r\n  };\r\n}\r\n\r\n// Given an array of coordinates representing a triangle, find the centroid\r\n// of the triangle and return it as an {x, y} object\r\n// Accepts a single [[x, y], [x, y], [x, y]] argument\r\nconst getCentroid = d => {\r\n  return {\r\n    x: (d[0][0] + d[1][0] + d[2][0]) / 3,\r\n    y: (d[0][1] + d[1][1] + d[2][1]) / 3\r\n  };\r\n};\r\n\r\n//\r\n// Usage example:\r\n//\r\n// const pattern = trianglify({\r\n//  width: 300,\r\n//  height: 200,\r\n//  colorFunction: trianglify.colorFunctions.sparkle(0.2)\r\n// })\r\n//\r\n// the snippet above gives you a trianglify pattern with a 20% random\r\n// jitter applied to the x and y gradient scales\r\n// Linear interpolation of two gradients, one for the x and one for the y\r\n// axis. This is the default Trianglify color function.\r\n// The bias parameter controls how prevalent the y axis is versus the x axis\r\n\r\nconst interpolateLinear = (bias = 0.5) => ({\r\n  xPercent,\r\n  yPercent,\r\n  xScale,\r\n  yScale,\r\n  opts\r\n}) => chroma.mix(xScale(xPercent), yScale(yPercent), bias, opts.colorSpace); // Give the pattern a 'sparkle' effect by introducing random noise into the\r\n// x and y gradients, making for higher contrast between cells.\r\n\r\nconst sparkle = (jitterFactor = 0.15) => ({\r\n  xPercent,\r\n  yPercent,\r\n  xScale,\r\n  yScale,\r\n  opts,\r\n  random\r\n}) => {\r\n  const jitter = () => (random() - 0.5) * jitterFactor;\r\n\r\n  const a = xScale(xPercent + jitter());\r\n  const b = yScale(yPercent + jitter());\r\n  return chroma.mix(a, b, 0.5, opts.colorSpace);\r\n}; // This is similar to the sparkle effect, but instead of swapping colors around\r\n// it darkens cells by a random amount. The shadowIntensity parameter controls\r\n// how dark the darkest shadows are.\r\n\r\nconst shadows = (shadowIntensity = 0.8) => {\r\n  return ({\r\n    xPercent,\r\n    yPercent,\r\n    xScale,\r\n    yScale,\r\n    opts,\r\n    random\r\n  }) => {\r\n    const a = xScale(xPercent);\r\n    const b = yScale(yPercent);\r\n    const color = chroma.mix(a, b, 0.5, opts.colorSpace);\r\n    return color.darken(shadowIntensity * random());\r\n  };\r\n};\r\n\r\nvar colorFunctions = /*#__PURE__*/Object.freeze({\r\n  __proto__: null,\r\n  interpolateLinear: interpolateLinear,\r\n  sparkle: sparkle,\r\n  shadows: shadows\r\n});\r\n\r\n/*\r\n * Trianglify.js\r\n * by @qrohlf\r\n *\r\n * Licensed under the GPLv3\r\n */\r\nconst defaultOptions = {\r\n  width: 600,\r\n  height: 400,\r\n  cellSize: 75,\r\n  variance: 0.75,\r\n  seed: null,\r\n  xColors: 'random',\r\n  yColors: 'match',\r\n  palette: colorbrewer,\r\n  colorSpace: 'lab',\r\n  colorFunction: interpolateLinear(0.5),\r\n  fill: true,\r\n  strokeWidth: 0,\r\n  points: null\r\n}; // This function does the \"core\" render-independent work:\r\n//\r\n// 1. Parse and munge options\r\n// 2. Setup cell geometry\r\n// 3. Generate random points within cell geometry\r\n// 4. Use the Delaunator library to run the triangulation\r\n// 5. Do color interpolation to establish the fundamental coloring of the shapes\r\n\r\nfunction trianglify(_opts = {}) {\r\n  Object.keys(_opts).forEach(k => {\r\n    if (defaultOptions[k] === undefined) {\r\n      throw TypeError(`Unrecognized option: ${k}`);\r\n    }\r\n  });\r\n  const opts = { ...defaultOptions,\r\n    ..._opts\r\n  };\r\n\r\n  if (!(opts.height > 0)) {\r\n    throw TypeError(`invalid height: ${opts.height}`);\r\n  }\r\n\r\n  if (!(opts.width > 0)) {\r\n    throw TypeError(`invalid width: ${opts.width}`);\r\n  } // standard randomizer, used for point gen and layout\r\n\r\n\r\n  const rand = mulberry32(opts.seed);\r\n\r\n  const randomFromPalette = () => {\r\n    if (opts.palette instanceof Array) {\r\n      return opts.palette[Math.floor(rand() * opts.palette.length)];\r\n    }\r\n\r\n    const keys = Object.keys(opts.palette);\r\n    return opts.palette[keys[Math.floor(rand() * keys.length)]];\r\n  }; // The first step here is to set up our color scales for the X and Y axis.\r\n  // First, munge the shortcut options like 'random' or 'match' into real color\r\n  // arrays. Then, set up a Chroma scale in the appropriate color space.\r\n\r\n\r\n  const processColorOpts = colorOpt => {\r\n    switch (true) {\r\n      case Array.isArray(colorOpt):\r\n        return colorOpt;\r\n\r\n      case !!opts.palette[colorOpt]:\r\n        return opts.palette[colorOpt];\r\n\r\n      case colorOpt === 'random':\r\n        return randomFromPalette();\r\n\r\n      default:\r\n        throw TypeError(`Unrecognized color option: ${colorOpt}`);\r\n    }\r\n  };\r\n\r\n  const xColors = processColorOpts(opts.xColors);\r\n  const yColors = opts.yColors === 'match' ? xColors : processColorOpts(opts.yColors);\r\n  const xScale = chroma.scale(xColors).mode(opts.colorSpace);\r\n  const yScale = chroma.scale(yColors).mode(opts.colorSpace); // Our next step is to generate a pseudo-random grid of {x, y} points,\r\n  // (or to simply utilize the points that were passed to us)\r\n\r\n  const points = opts.points || getPoints(opts, rand); // Once we have the points array, run the triangulation\r\n\r\n  var geomIndices = Delaunator.from(points).triangles; // ...and then generate geometry and color data:\r\n  // use a different (salted) randomizer for the color function so that\r\n  // swapping out color functions doesn't change the pattern geometry itself\r\n\r\n  const salt = 42;\r\n  const cRand = mulberry32(opts.seed ? opts.seed + salt : null);\r\n  const polys = [];\r\n\r\n  for (let i = 0; i < geomIndices.length; i += 3) {\r\n    // convert shallow array-packed vertex indices into 3-tuples\r\n    const vertexIndices = [geomIndices[i], geomIndices[i + 1], geomIndices[i + 2]]; // grab a copy of the actual vertices to use for calculations\r\n\r\n    const vertices = vertexIndices.map(i => points[i]);\r\n    const {\r\n      width,\r\n      height\r\n    } = opts;\r\n\r\n    const norm = num => Math.max(0, Math.min(1, num));\r\n\r\n    const centroid = getCentroid(vertices);\r\n    const xPercent = norm(centroid.x / width);\r\n    const yPercent = norm(centroid.y / height);\r\n    const color = opts.colorFunction({\r\n      centroid,\r\n      // centroid of polygon, non-normalized\r\n      xPercent,\r\n      // x-coordinate of centroid, normalized to [0, 1]\r\n      yPercent,\r\n      // y-coordinate of centroid, normalized to [0, 1]\r\n      vertexIndices,\r\n      // vertex indices of the polygon\r\n      vertices,\r\n      // [x, y] vertices of the polygon\r\n      xScale,\r\n      // x-colors scale for the pattern\r\n      yScale,\r\n      // y-colors scale for the pattern\r\n      points,\r\n      // array of generated points for the pattern\r\n      opts,\r\n      // options used to initialize the pattern\r\n      random: cRand // seeded randomization function for use by color functions\r\n\r\n    });\r\n    polys.push({\r\n      vertexIndices,\r\n      centroid,\r\n      color // chroma color object\r\n\r\n    });\r\n  }\r\n\r\n  return new Pattern(points, polys, opts);\r\n}\r\n\r\nconst getPoints = (opts, random) => {\r\n  const {\r\n    width,\r\n    height,\r\n    cellSize,\r\n    variance\r\n  } = opts; // pad by 2 cells outside the visible area on each side to ensure we fully\r\n  // cover the 'artboard'\r\n\r\n  const colCount = Math.floor(width / cellSize) + 4;\r\n  const rowCount = Math.floor(height / cellSize) + 4; // determine bleed values to ensure that the grid is centered within the\r\n  // artboard\r\n\r\n  const bleedX = (colCount * cellSize - width) / 2;\r\n  const bleedY = (rowCount * cellSize - height) / 2; // apply variance to cellSize to get cellJitter in pixels\r\n\r\n  const cellJitter = cellSize * variance;\r\n\r\n  const getJitter = () => (random() - 0.5) * cellJitter;\r\n\r\n  const pointCount = colCount * rowCount;\r\n  const halfCell = cellSize / 2;\r\n  const points = Array(pointCount).fill(null).map((_, i) => {\r\n    const col = i % colCount;\r\n    const row = Math.floor(i / colCount); // [x, y, z]\r\n\r\n    return [-bleedX + col * cellSize + halfCell + getJitter(), -bleedY + row * cellSize + halfCell + getJitter()];\r\n  });\r\n  return points;\r\n}; // tweak some of the exports here\r\n\r\n\r\ntrianglify.utils = {\r\n  mix: chroma.mix,\r\n  colorbrewer\r\n};\r\ntrianglify.colorFunctions = colorFunctions;\r\ntrianglify.Pattern = Pattern;\r\ntrianglify.defaultOptions = defaultOptions;\r\n\r\nmodule.exports = trianglify;\r\n"],
  "mappings": "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",
  "names": ["n", "rgb", "i", "Color", "list", "i$1", "hsl", "name", "num", "rnd", "abs", "lab", "lch", "A", "colors", "d", "f", "_pos", "key", "min", "max", "limits", "dist", "Delaunator", "i"]
}
